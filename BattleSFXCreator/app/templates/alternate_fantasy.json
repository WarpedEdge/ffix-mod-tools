{
  "name": "Alternate Fantasy",
  "templates": {
    "Thousand_Needles": [
      {
        "template_id": "thousand_needles_sequence",
        "target_type": "Thousand_Needles",
        "label": "Sequence",
        "description": "Imported from Alternate Fantasy (ef030/Sequence.seq)",
        "body": "// Shared sequence of SFX Thousand_Needles\n// Split damage in 10 hits\n\nPlaySound: Sound=196\nPlaySound: Sound=178\nPlaySound: Sound=167\nWait: Time=8\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=44\n",
        "placeholders": {},
        "example": "// Shared sequence of SFX Thousand_Needles\n// Split damage in 10 hits\n\nPlaySound: Sound=196\nPlaySound: Sound=178\nPlaySound: Sound=167\nWait: Time=8\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=44"
      }
    ],
    "Comet": [
      {
        "template_id": "comet_sequence",
        "target_type": "Comet",
        "label": "Sequence",
        "description": "Imported from Alternate Fantasy (ef056/Sequence.seq)",
        "body": "// Shared sequence of SFX Comet\n\nSetBackgroundIntensity: Intensity=0.5 ; Time=4 ; HoldDuration=64\nPlaySound: Sound=145\nPlaySound: Sound=165\nPlaySound: Sound=257\nWait: Time=14\nEffectPoint: Char=AllTargets ; Type=Effect\nWait: Time=4\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=10\nEffectPoint: Char=AllTargets ; Type=Effect\nWait: Time=4\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nWait: Time=4\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=26\nSetBackgroundIntensity: Intensity=1 ; Time=8\n",
        "placeholders": {},
        "example": "// Shared sequence of SFX Comet\n\nSetBackgroundIntensity: Intensity=0.5 ; Time=4 ; HoldDuration=64\nPlaySound: Sound=145\nPlaySound: Sound=165\nPlaySound: Sound=257\nWait: Time=14\nEffectPoint: Char=AllTargets ; Type=Effect\nWait: Time=4\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=10\nEffectPoint: Char=AllTargets ; Type=Effect\nWait: Time=4\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=2\nEffectPoint: Char=AllTargets ; Type=Effect\nWait: Time=4\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=26\nSetBackgroundIntensity: Intensity=1 ; Time=8"
      }
    ],
    "Limit_Glove": [
      {
        "template_id": "limit_glove_sequence",
        "target_type": "Limit_Glove",
        "label": "Sequence",
        "description": "Imported from Alternate Fantasy (ef082/Sequence.seq)",
        "body": "// Shared sequence of SFX Limit_Glove\n// Hide/show target\n\nPlaySound: Sound=2350\nPlaySound: Sound=2351\nPlaySound: Sound=2352\nSetBackgroundIntensity: Intensity=0 ; Time=16 ; HoldDuration=188\nWait: Time=12\nPlaySound: Sound=2353\nPlaySound: Sound=2354\nPlaySound: Sound=2355\nWait: Time=30\nPlaySound: Sound=2356\nPlaySound: Sound=2357\nPlaySound: Sound=2358\nWait: Time=146\nPlaySound: Sound=2359\nPlaySound: Sound=2360\nPlaySound: Sound=2361\nSetBackgroundIntensity: Intensity=1 ; Time=1\nStartThread: Condition=ScriptId == 81\n\tShowMesh: Char=AllTargets ; Enable=False ; IsDisappear=True ; Time=5\nEndThread\nWait: Time=24\nEffectPoint: Char=AllTargets ; Type=Effect\nStartThread: Condition=ScriptId == 81\n\tShowMesh: Char=AllTargets ; Enable=True ; IsDisappear=True ; Time=10\nEndThread\nWait: Time=27\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=20\n",
        "placeholders": {},
        "example": "// Shared sequence of SFX Limit_Glove\n// Hide/show target\n\nPlaySound: Sound=2350\nPlaySound: Sound=2351\nPlaySound: Sound=2352\nSetBackgroundIntensity: Intensity=0 ; Time=16 ; HoldDuration=188\nWait: Time=12\nPlaySound: Sound=2353\nPlaySound: Sound=2354\nPlaySound: Sound=2355\nWait: Time=30\nPlaySound: Sound=2356\nPlaySound: Sound=2357\nPlaySound: Sound=2358\nWait: Time=146\nPlaySound: Sound=2359\nPlaySound: Sound=2360\nPlaySound: Sound=2361\nSetBackgroundIntensity: Intensity=1 ; Time=1\nStartThread: Condition=ScriptId == 81\n\tShowMesh: Char=AllTargets ; Enable=False ; IsDisappear=True ; Time=5\nEndThread\nWait: Time=24\nEffectPoint: Char=AllTargets ; Type=Effect\nStartThread: Condition=ScriptId == 81\n\tShowMesh: Char=AllTargets ; Enable=True ; IsDisappear=True ; Time=10\nEndThread\nWait: Time=27\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=20"
      }
    ],
    "Haste": [
      {
        "template_id": "haste_playersequence",
        "target_type": "Haste",
        "label": "PlayerSequence",
        "description": "Imported from Alternate Fantasy (ef089/PlayerSequence.seq)",
        "body": "// Player sequence of SFX Haste\n// Have Haste be a double cast Haste/Slow on one ally/enemy\n\nWaitAnimation: Char=Caster\nSetVariable: Variable=cmd_status ; Value=&65533 ; Reflect=True\nStartThread: Condition=CasterRow == 0 && AreCasterAndSelectedTargetsEnemies ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, 400) ; Anim={anim_1}\n\tWaitMove: Char=Caster\nEndThread\nStartThread: Condition=IsSingleSelectedTarget\n\tTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nEndThread\nMessage: Text={text_1}; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nStartThread: Condition=IsSingleTarget ; Sync=True\n\tStartThread: Condition=AreCasterAndSelectedTargetsEnemies ; Sync=True\n\t\tLoadSFX: SFX={sfx_1}; Reflect=True ; UseCamera=False\n\t\tStartThread: Condition=ItemUseId == 255 ; Sync=True\n\t\t\tPlayAnimation: Char=Caster ; Anim={anim_2}\n\t\t\tWaitAnimation: Char=Caster\n\t\t\tPlayAnimation: Char=Caster ; Anim={anim_3}; Loop=True\n\t\t\tChannel\n\t\t\tWaitSFXLoaded: SFX={sfx_2}; Reflect=True\n\t\t\tWaitAnimation: Char=Caster\n\t\t\tStopChannel\n\t\t\tPlayAnimation: Char=Caster ; Anim={anim_4}\n\t\t\tWaitAnimation: Char=Caster\n\t\tEndThread\n\t\tStartThread: Condition=ItemUseId != 255 ; Sync=True\n\t\t\tPlayAnimation: Char=Caster ; Anim={anim_5}\n\t\t\tWaitAnimation: Char=Caster\n\t\t\tWaitSFXLoaded: SFX={sfx_3}; Reflect=True\n\t\tEndThread\n\t\tStartThread: Condition=CasterIsPlayer ; Target=AllPlayers\n\t\t\tStartThread: Target=RandomTarget\n\t\t\t\tLoadSFX: SFX={sfx_4}; UseCamera=False\n\t\t\t\tWaitSFXLoaded: SFX={sfx_5}\n\t\t\t\tPlaySFX: SFX={sfx_6}\n\t\t\t\tWaitSFXDone: SFX={sfx_7}\n\t\t\tEndThread\n\t\tEndThread\n\t\tPlaySFX: SFX={sfx_8}; Reflect=True\n\t\tWaitSFXDone: SFX={sfx_9}; Reflect=True\n\tEndThread\n\tStartThread: Condition=!AreCasterAndSelectedTargetsEnemies ; Sync=True\n\t\tLoadSFX: SFX={sfx_10}; Reflect=True ; UseCamera=False\n\t\tStartThread: Condition=ItemUseId == 255 ; Sync=True\n\t\t\tPlayAnimation: Char=Caster ; Anim={anim_6}\n\t\t\tWaitAnimation: Char=Caster\n\t\t\tPlayAnimation: Char=Caster ; Anim={anim_7}; Loop=True\n\t\t\tChannel\n\t\t\tWaitSFXLoaded: SFX={sfx_11}; Reflect=True\n\t\t\tWaitAnimation: Char=Caster\n\t\t\tStopChannel\n\t\t\tPlayAnimation: Char=Caster ; Anim={anim_8}\n\t\t\tWaitAnimation: Char=Caster\n\t\tEndThread\n\t\tStartThread: Condition=ItemUseId != 255 ; Sync=True\n\t\t\tPlayAnimation: Char=Caster ; Anim={anim_9}\n\t\t\tWaitAnimation: Char=Caster\n\t\t\tWaitSFXLoaded: SFX={sfx_12}; Reflect=True\n\t\tEndThread\n\t\tStartThread: Condition=CasterIsPlayer ; Target=AllEnemies\n\t\t\tStartThread: Target=RandomTarget\n\t\t\t\tLoadSFX: SFX={sfx_13}; UseCamera=False\n\t\t\t\tWaitSFXLoaded: SFX={sfx_14}\n\t\t\t\tPlaySFX: SFX={sfx_15}\n\t\t\t\tWaitSFXDone: SFX={sfx_16}\n\t\t\tEndThread\n\t\tEndThread\n\t\tPlaySFX: SFX={sfx_17}; Reflect=True\n\t\tWaitSFXDone: SFX={sfx_18}; Reflect=True\n\tEndThread\nEndThread\nStartThread: Condition=!IsSingleTarget ; Sync=True\n\tStartThread: Condition=ItemUseId == 255 ; Sync=True\n\t\tPlayAnimation: Char=Caster ; Anim={anim_10}\n\t\tWaitAnimation: Char=Caster\n\t\tPlayAnimation: Char=Caster ; Anim={anim_11}; Loop=True\n\t\tChannel\n\t\tWaitAnimation: Char=Caster\n\t\tWaitAnimation: Char=Caster\n\t\tStopChannel\n\t\tPlayAnimation: Char=Caster ; Anim={anim_12}\n\t\tWaitAnimation: Char=Caster\n\tEndThread\n\tStartThread: Condition=ItemUseId != 255 ; Sync=True\n\t\tPlayAnimation: Char=Caster ; Anim={anim_13}\n\t\tWaitAnimation: Char=Caster\n\tEndThread\n\tStartThread: Condition=!AreCasterAndSelectedTargetsEnemies && CasterIsPlayer ; Target=AllEnemies\n\t\tStartThread: Target=RandomTarget\n\t\t\tLoadSFX: SFX={sfx_19}; UseCamera=False\n\t\t\tWaitSFXLoaded: SFX={sfx_20}\n\t\t\tPlaySFX: SFX={sfx_21}\n\t\t\tWaitSFXDone: SFX={sfx_22}\n\t\tEndThread\n\tEndThread\n\tStartThread: TargetLoop=True ; Chain=True ; Sync=True\n\t\tLoadSFX: SFX={sfx_23}; Reflect=True ; UseCamera=False\n\t\tWaitSFXLoaded: SFX={sfx_24}; Reflect=True\n\t\tPlaySFX: SFX={sfx_25}; Reflect=True\n\t\tWait: Time=10\n\tEndThread\n\tWaitSFXDone: SFX={sfx_26}; Reflect=True\nEndThread\nSetVariable: Variable=cmd_status ; Value=|2 ; Reflect=True\nActivateReflect\nWaitReflect\nStartThread: Condition=CasterRow == 0 && AreCasterAndSelectedTargetsEnemies ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, -400) ; Anim={anim_14}\n\tWaitMove: Char=Caster\nEndThread\nPlayAnimation: Char=Caster ; Anim={anim_15}\nTurn: Char=Caster ; BaseAngle=Default ; Time=5\nWaitTurn: Char=Caster\n",
        "placeholders": {
          "sfx_1": "SFX identifier (was Slow)",
          "sfx_2": "SFX identifier (was Slow)",
          "sfx_3": "SFX identifier (was Slow)",
          "sfx_4": "SFX identifier (was Haste)",
          "sfx_5": "SFX identifier (was Haste)",
          "sfx_6": "SFX identifier (was Haste)",
          "sfx_7": "SFX identifier (was Haste)",
          "sfx_8": "SFX identifier (was Slow)",
          "sfx_9": "SFX identifier (was Slow)",
          "sfx_10": "SFX identifier (was Haste)",
          "sfx_11": "SFX identifier (was Haste)",
          "sfx_12": "SFX identifier (was Haste)",
          "sfx_13": "SFX identifier (was Slow)",
          "sfx_14": "SFX identifier (was Slow)",
          "sfx_15": "SFX identifier (was Slow)",
          "sfx_16": "SFX identifier (was Slow)",
          "sfx_17": "SFX identifier (was Haste)",
          "sfx_18": "SFX identifier (was Haste)",
          "sfx_19": "SFX identifier (was Slow)",
          "sfx_20": "SFX identifier (was Slow)",
          "sfx_21": "SFX identifier (was Slow)",
          "sfx_22": "SFX identifier (was Slow)",
          "sfx_23": "SFX identifier (was Haste)",
          "sfx_24": "SFX identifier (was Haste)",
          "sfx_25": "SFX identifier (was Haste)",
          "sfx_26": "SFX identifier (was Haste)",
          "anim_1": "Animation identifier (was MP_STEP_FORWARD)",
          "anim_2": "Animation identifier (was MP_IDLE_TO_CHANT)",
          "anim_3": "Animation identifier (was MP_CHANT)",
          "anim_4": "Animation identifier (was MP_MAGIC)",
          "anim_5": "Animation identifier (was MP_ITEM1)",
          "anim_6": "Animation identifier (was MP_IDLE_TO_CHANT)",
          "anim_7": "Animation identifier (was MP_CHANT)",
          "anim_8": "Animation identifier (was MP_MAGIC)",
          "anim_9": "Animation identifier (was MP_ITEM1)",
          "anim_10": "Animation identifier (was MP_IDLE_TO_CHANT)",
          "anim_11": "Animation identifier (was MP_CHANT)",
          "anim_12": "Animation identifier (was MP_MAGIC)",
          "anim_13": "Animation identifier (was MP_ITEM1)",
          "anim_14": "Animation identifier (was MP_STEP_BACK)",
          "anim_15": "Animation identifier (was Idle)",
          "text_1": "Message text (was [CastName])"
        },
        "example": "// Player sequence of SFX Haste\n// Have Haste be a double cast Haste/Slow on one ally/enemy\n\nWaitAnimation: Char=Caster\nSetVariable: Variable=cmd_status ; Value=&65533 ; Reflect=True\nStartThread: Condition=CasterRow == 0 && AreCasterAndSelectedTargetsEnemies ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, 400) ; Anim=MP_STEP_FORWARD\n\tWaitMove: Char=Caster\nEndThread\nStartThread: Condition=IsSingleSelectedTarget\n\tTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nEndThread\nMessage: Text=[CastName] ; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nStartThread: Condition=IsSingleTarget ; Sync=True\n\tStartThread: Condition=AreCasterAndSelectedTargetsEnemies ; Sync=True\n\t\tLoadSFX: SFX=Slow ; Reflect=True ; UseCamera=False\n\t\tStartThread: Condition=ItemUseId == 255 ; Sync=True\n\t\t\tPlayAnimation: Char=Caster ; Anim=MP_IDLE_TO_CHANT\n\t\t\tWaitAnimation: Char=Caster\n\t\t\tPlayAnimation: Char=Caster ; Anim=MP_CHANT ; Loop=True\n\t\t\tChannel\n\t\t\tWaitSFXLoaded: SFX=Slow ; Reflect=True\n\t\t\tWaitAnimation: Char=Caster\n\t\t\tStopChannel\n\t\t\tPlayAnimation: Char=Caster ; Anim=MP_MAGIC\n\t\t\tWaitAnimation: Char=Caster\n\t\tEndThread\n\t\tStartThread: Condition=ItemUseId != 255 ; Sync=True\n\t\t\tPlayAnimation: Char=Caster ; Anim=MP_ITEM1\n\t\t\tWaitAnimation: Char=Caster\n\t\t\tWaitSFXLoaded: SFX=Slow ; Reflect=True\n\t\tEndThread\n\t\tStartThread: Condition=CasterIsPlayer ; Target=AllPlayers\n\t\t\tStartThread: Target=RandomTarget\n\t\t\t\tLoadSFX: SFX=Haste ; UseCamera=False\n\t\t\t\tWaitSFXLoaded: SFX=Haste\n\t\t\t\tPlaySFX: SFX=Haste\n\t\t\t\tWaitSFXDone: SFX=Haste\n\t\t\tEndThread\n\t\tEndThread\n\t\tPlaySFX: SFX=Slow ; Reflect=True\n\t\tWaitSFXDone: SFX=Slow ; Reflect=True\n\tEndThread\n\tStartThread: Condition=!AreCasterAndSelectedTargetsEnemies ; Sync=True\n\t\tLoadSFX: SFX=Haste ; Reflect=True ; UseCamera=False\n\t\tStartThread: Condition=ItemUseId == 255 ; Sync=True\n\t\t\tPlayAnimation: Char=Caster ; Anim=MP_IDLE_TO_CHANT\n\t\t\tWaitAnimation: Char=Caster\n\t\t\tPlayAnimation: Char=Caster ; Anim=MP_CHANT ; Loop=True\n\t\t\tChannel\n\t\t\tWaitSFXLoaded: SFX=Haste ; Reflect=True\n\t\t\tWaitAnimation: Char=Caster\n\t\t\tStopChannel\n\t\t\tPlayAnimation: Char=Caster ; Anim=MP_MAGIC\n\t\t\tWaitAnimation: Char=Caster\n\t\tEndThread\n\t\tStartThread: Condition=ItemUseId != 255 ; Sync=True\n\t\t\tPlayAnimation: Char=Caster ; Anim=MP_ITEM1\n\t\t\tWaitAnimation: Char=Caster\n\t\t\tWaitSFXLoaded: SFX=Haste ; Reflect=True\n\t\tEndThread\n\t\tStartThread: Condition=CasterIsPlayer ; Target=AllEnemies\n\t\t\tStartThread: Target=RandomTarget\n\t\t\t\tLoadSFX: SFX=Slow ; UseCamera=False\n\t\t\t\tWaitSFXLoaded: SFX=Slow\n\t\t\t\tPlaySFX: SFX=Slow\n\t\t\t\tWaitSFXDone: SFX=Slow\n\t\t\tEndThread\n\t\tEndThread\n\t\tPlaySFX: SFX=Haste ; Reflect=True\n\t\tWaitSFXDone: SFX=Haste ; Reflect=True\n\tEndThread\nEndThread\nStartThread: Condition=!IsSingleTarget ; Sync=True\n\tStartThread: Condition=ItemUseId == 255 ; Sync=True\n\t\tPlayAnimation: Char=Caster ; Anim=MP_IDLE_TO_CHANT\n\t\tWaitAnimation: Char=Caster\n\t\tPlayAnimation: Char=Caster ; Anim=MP_CHANT ; Loop=True\n\t\tChannel\n\t\tWaitAnimation: Char=Caster\n\t\tWaitAnimation: Char=Caster\n\t\tStopChannel\n\t\tPlayAnimation: Char=Caster ; Anim=MP_MAGIC\n\t\tWaitAnimation: Char=Caster\n\tEndThread\n\tStartThread: Condition=ItemUseId != 255 ; Sync=True\n\t\tPlayAnimation: Char=Caster ; Anim=MP_ITEM1\n\t\tWaitAnimation: Char=Caster\n\tEndThread\n\tStartThread: Condition=!AreCasterAndSelectedTargetsEnemies && CasterIsPlayer ; Target=AllEnemies\n\t\tStartThread: Target=RandomTarget\n\t\t\tLoadSFX: SFX=Slow ; UseCamera=False\n\t\t\tWaitSFXLoaded: SFX=Slow\n\t\t\tPlaySFX: SFX=Slow\n\t\t\tWaitSFXDone: SFX=Slow\n\t\tEndThread\n\tEndThread\n\tStartThread: TargetLoop=True ; Chain=True ; Sync=True\n\t\tLoadSFX: SFX=Haste ; Reflect=True ; UseCamera=False\n\t\tWaitSFXLoaded: SFX=Haste ; Reflect=True\n\t\tPlaySFX: SFX=Haste ; Reflect=True\n\t\tWait: Time=10\n\tEndThread\n\tWaitSFXDone: SFX=Haste ; Reflect=True\nEndThread\nSetVariable: Variable=cmd_status ; Value=|2 ; Reflect=True\nActivateReflect\nWaitReflect\nStartThread: Condition=CasterRow == 0 && AreCasterAndSelectedTargetsEnemies ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, -400) ; Anim=MP_STEP_BACK\n\tWaitMove: Char=Caster\nEndThread\nPlayAnimation: Char=Caster ; Anim=Idle\nTurn: Char=Caster ; BaseAngle=Default ; Time=5\nWaitTurn: Char=Caster"
      }
    ],
    "Shock_1": [
      {
        "template_id": "shock_1_playersequence",
        "target_type": "Shock_1",
        "label": "PlayerSequence",
        "description": "Imported from Alternate Fantasy (ef192/PlayerSequence.seq)",
        "body": "// Player sequence of SFX Shock_1\n\nWaitAnimation: Char=Caster\nStartThread: Condition=AreCasterAndSelectedTargetsEnemies ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, 400) ; Anim={anim_1}\n\tWaitMove: Char=Caster\nEndThread\nStartThread: Condition=IsSingleSelectedTarget\n\tTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nEndThread\nMessage: Text={text_1}; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX={sfx_1}; Reflect=True\nPlayAnimation: Char=Caster ; Anim={anim_2}\nWaitAnimation: Char=Caster\nPlayAnimation: Char=Caster ; Anim={anim_3}; Loop=True\nWaitSFXLoaded: SFX={sfx_2}; Reflect=True\nWaitAnimation: Char=Caster\nPlayAnimation: Char=Caster ; Anim={anim_4}\nWait: Time=12\nPlaySFX: SFX={sfx_3}; HideMeshes=0x00B7BD40 ; MeshColors=0x00B7BD80:(2, 1, 0.2), 0x0497BD00:(2, 1, 0.2) ; Reflect=True\nWaitAnimation: Char=Caster\nWaitSFXDone: SFX={sfx_4}; Reflect=True\nActivateReflect\nWaitReflect\nStartThread: Condition=AreCasterAndSelectedTargetsEnemies ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, -400) ; Anim={anim_5}\n\tWaitMove: Char=Caster\nEndThread\nPlayAnimation: Char=Caster ; Anim={anim_6}\nTurn: Char=Caster ; BaseAngle=Default ; Time=5\nWaitTurn: Char=Caster\n",
        "placeholders": {
          "sfx_1": "SFX identifier (was Shock_1)",
          "sfx_2": "SFX identifier (was Shock_1)",
          "sfx_3": "SFX identifier (was Shock_1)",
          "sfx_4": "SFX identifier (was Shock_1)",
          "anim_1": "Animation identifier (was MP_STEP_FORWARD)",
          "anim_2": "Animation identifier (was MP_IDLE_TO_CHANT)",
          "anim_3": "Animation identifier (was MP_CHANT)",
          "anim_4": "Animation identifier (was ANH_MAIN_B0_007_600)",
          "anim_5": "Animation identifier (was MP_STEP_BACK)",
          "anim_6": "Animation identifier (was Idle)",
          "text_1": "Message text (was [CastName])"
        },
        "example": "// Player sequence of SFX Shock_1\n\nWaitAnimation: Char=Caster\nStartThread: Condition=AreCasterAndSelectedTargetsEnemies ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, 400) ; Anim=MP_STEP_FORWARD\n\tWaitMove: Char=Caster\nEndThread\nStartThread: Condition=IsSingleSelectedTarget\n\tTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nEndThread\nMessage: Text=[CastName] ; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX=Shock_1 ; Reflect=True\nPlayAnimation: Char=Caster ; Anim=MP_IDLE_TO_CHANT\nWaitAnimation: Char=Caster\nPlayAnimation: Char=Caster ; Anim=MP_CHANT ; Loop=True\nWaitSFXLoaded: SFX=Shock_1 ; Reflect=True\nWaitAnimation: Char=Caster\nPlayAnimation: Char=Caster ; Anim=ANH_MAIN_B0_007_600\nWait: Time=12\nPlaySFX: SFX=Shock_1 ; HideMeshes=0x00B7BD40 ; MeshColors=0x00B7BD80:(2, 1, 0.2), 0x0497BD00:(2, 1, 0.2) ; Reflect=True\nWaitAnimation: Char=Caster\nWaitSFXDone: SFX=Shock_1 ; Reflect=True\nActivateReflect\nWaitReflect\nStartThread: Condition=AreCasterAndSelectedTargetsEnemies ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, -400) ; Anim=MP_STEP_BACK\n\tWaitMove: Char=Caster\nEndThread\nPlayAnimation: Char=Caster ; Anim=Idle\nTurn: Char=Caster ; BaseAngle=Default ; Time=5\nWaitTurn: Char=Caster"
      }
    ],
    "Windfall (Dagger)": [
      {
        "template_id": "windfall_dagger_playersequence",
        "target_type": "Windfall (Dagger)",
        "label": "PlayerSequence",
        "description": "Imported from Alternate Fantasy (ef20000/PlayerSequence.seq)",
        "body": "// Player sequence of SFX Windfall (Dagger)\n\nWaitAnimation: Char=Caster\nMessage: Text={text_1}; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX={sfx_1}; Reflect=True ; UseCamera=False\nPlayAnimation: Char=Caster ; Anim={anim_1}\nWaitAnimation: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=670 ; UseCollisionRadius=True ; Anim={anim_2}\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=4\nWaitMove: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=400 ; UseCollisionRadius=True ; Anim={anim_3}\nWaitMove: Char=Caster\nStartThread\n\tWait: Time=4\n\tWaitSFXLoaded: SFX={sfx_2}\n\tPlaySFX: SFX={sfx_3}\n\tWaitSFXDone: SFX={sfx_4}\nEndThread\nPlayAnimation: Char=Caster ; Anim={anim_4}\nWaitAnimation: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=-200 ; UseCollisionRadius=True ; Time=0\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=1100 ; UseCollisionRadius=True ; Anim={anim_5}\nWaitMove: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=670 ; UseCollisionRadius=True ; Anim={anim_6}\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=4\nWaitMove: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=400 ; UseCollisionRadius=True ; Anim={anim_7}\nWaitMove: Char=Caster\nStartThread\n\tWait: Time=4\n\tWaitSFXLoaded: SFX={sfx_5}\n\tPlaySFX: SFX={sfx_6}\n\tWaitSFXDone: SFX={sfx_7}\nEndThread\nPlayAnimation: Char=Caster ; Anim={anim_8}\nWaitAnimation: Char=Caster\nMoveToPosition: Char=Caster ; AbsolutePosition=Default ; Anim={anim_9}\nTurn: Char=Caster ; BaseAngle=Default ; Time=4\nWaitMove: Caster\nPlayAnimation: Char=Caster ; Anim={anim_10}\nWaitTurn: Char=Caster\nActivateReflect\nWaitReflect\n",
        "placeholders": {
          "sfx_1": "SFX identifier (was Iai_Strike_1)",
          "sfx_2": "SFX identifier (was Iai_Strike_1)",
          "sfx_3": "SFX identifier (was Iai_Strike_1)",
          "sfx_4": "SFX identifier (was Iai_Strike_1)",
          "sfx_5": "SFX identifier (was Iai_Strike_1)",
          "sfx_6": "SFX identifier (was Iai_Strike_1)",
          "sfx_7": "SFX identifier (was Iai_Strike_1)",
          "anim_1": "Animation identifier (was MP_SET)",
          "anim_2": "Animation identifier (was MP_RUN)",
          "anim_3": "Animation identifier (was MP_RUN_TO_ATTACK)",
          "anim_4": "Animation identifier (was MP_ATTACK)",
          "anim_5": "Animation identifier (was MP_STEP_BACK)",
          "anim_6": "Animation identifier (was MP_RUN)",
          "anim_7": "Animation identifier (was MP_RUN_TO_ATTACK)",
          "anim_8": "Animation identifier (was MP_ATTACK)",
          "anim_9": "Animation identifier (was MP_BACK)",
          "anim_10": "Animation identifier (was Idle)",
          "text_1": "Message text (was [CastName])"
        },
        "example": "// Player sequence of SFX Windfall (Dagger)\n\nWaitAnimation: Char=Caster\nMessage: Text=[CastName] ; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX=Iai_Strike_1 ; Reflect=True ; UseCamera=False\nPlayAnimation: Char=Caster ; Anim=MP_SET\nWaitAnimation: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=670 ; UseCollisionRadius=True ; Anim=MP_RUN\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=4\nWaitMove: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=400 ; UseCollisionRadius=True ; Anim=MP_RUN_TO_ATTACK\nWaitMove: Char=Caster\nStartThread\n\tWait: Time=4\n\tWaitSFXLoaded: SFX=Iai_Strike_1\n\tPlaySFX: SFX=Iai_Strike_1\n\tWaitSFXDone: SFX=Iai_Strike_1\nEndThread\nPlayAnimation: Char=Caster ; Anim=MP_ATTACK\nWaitAnimation: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=-200 ; UseCollisionRadius=True ; Time=0\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=1100 ; UseCollisionRadius=True ; Anim=MP_STEP_BACK\nWaitMove: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=670 ; UseCollisionRadius=True ; Anim=MP_RUN\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=4\nWaitMove: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=400 ; UseCollisionRadius=True ; Anim=MP_RUN_TO_ATTACK\nWaitMove: Char=Caster\nStartThread\n\tWait: Time=4\n\tWaitSFXLoaded: SFX=Iai_Strike_1\n\tPlaySFX: SFX=Iai_Strike_1\n\tWaitSFXDone: SFX=Iai_Strike_1\nEndThread\nPlayAnimation: Char=Caster ; Anim=MP_ATTACK\nWaitAnimation: Char=Caster\nMoveToPosition: Char=Caster ; AbsolutePosition=Default ; Anim=MP_BACK\nTurn: Char=Caster ; BaseAngle=Default ; Time=4\nWaitMove: Caster\nPlayAnimation: Char=Caster ; Anim=Idle\nWaitTurn: Char=Caster\nActivateReflect\nWaitReflect"
      }
    ],
    "Windfall (Thief Sword)": [
      {
        "template_id": "windfall_thief_sword_playersequence",
        "target_type": "Windfall (Thief Sword)",
        "label": "PlayerSequence",
        "description": "Imported from Alternate Fantasy (ef20001/PlayerSequence.seq)",
        "body": "// Player sequence of SFX Windfall (Thief Sword)\n\nWaitAnimation: Char=Caster\nMessage: Text={text_1}; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX={sfx_1}; Reflect=True\nPlayAnimation: Char=Caster ; Anim={anim_1}\nWaitAnimation: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=830 ; UseCollisionRadius=True ; Anim={anim_2}\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=8\nWaitMove: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=400 ; UseCollisionRadius=True ; Anim={anim_3}\nWaitMove: Char=Caster\nStartThread\n\tWait: Time=1\n\tWaitSFXLoaded: SFX={sfx_2}; Reflect=True\n\tPlaySFX: SFX={sfx_3}; Reflect=True\n\tWaitSFXDone: SFX={sfx_4}; Reflect=True\nEndThread\nPlayAnimation: Char=Caster ; Anim={anim_4}\nWaitAnimation: Char=Caster\nMoveToPosition: Char=Caster ; AbsolutePosition=Default ; Anim={anim_5}\nTurn: Char=Caster ; BaseAngle=Default ; Time=4\nWaitMove: Caster\nPlayAnimation: Char=Caster ; Anim={anim_6}\nWaitTurn: Char=Caster\nActivateReflect\nWaitReflect\n",
        "placeholders": {
          "sfx_1": "SFX identifier (was Stock_Break_1)",
          "sfx_2": "SFX identifier (was Stock_Break_1)",
          "sfx_3": "SFX identifier (was Stock_Break_1)",
          "sfx_4": "SFX identifier (was Stock_Break_1)",
          "anim_1": "Animation identifier (was MP_SET)",
          "anim_2": "Animation identifier (was MP_RUN)",
          "anim_3": "Animation identifier (was MP_RUN_TO_ATTACK)",
          "anim_4": "Animation identifier (was MP_ATTACK)",
          "anim_5": "Animation identifier (was MP_BACK)",
          "anim_6": "Animation identifier (was Idle)",
          "text_1": "Message text (was [CastName])"
        },
        "example": "// Player sequence of SFX Windfall (Thief Sword)\n\nWaitAnimation: Char=Caster\nMessage: Text=[CastName] ; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX=Stock_Break_1 ; Reflect=True\nPlayAnimation: Char=Caster ; Anim=MP_SET\nWaitAnimation: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=830 ; UseCollisionRadius=True ; Anim=MP_RUN\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=8\nWaitMove: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=400 ; UseCollisionRadius=True ; Anim=MP_RUN_TO_ATTACK\nWaitMove: Char=Caster\nStartThread\n\tWait: Time=1\n\tWaitSFXLoaded: SFX=Stock_Break_1 ; Reflect=True\n\tPlaySFX: SFX=Stock_Break_1 ; Reflect=True\n\tWaitSFXDone: SFX=Stock_Break_1 ; Reflect=True\nEndThread\nPlayAnimation: Char=Caster ; Anim=MP_ATTACK\nWaitAnimation: Char=Caster\nMoveToPosition: Char=Caster ; AbsolutePosition=Default ; Anim=MP_BACK\nTurn: Char=Caster ; BaseAngle=Default ; Time=4\nWaitMove: Caster\nPlayAnimation: Char=Caster ; Anim=Idle\nWaitTurn: Char=Caster\nActivateReflect\nWaitReflect"
      }
    ],
    "Silence_Sword": [
      {
        "template_id": "silence_sword_playersequence",
        "target_type": "Silence_Sword",
        "label": "PlayerSequence",
        "description": "Imported from Alternate Fantasy (ef20002/PlayerSequence.seq)",
        "body": "// Player sequence of SFX Silence_Sword\n\nWaitAnimation: Char=Caster\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nMessage: Text={text_1}; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX={sfx_1}; MagicCaster=Garnet ; Reflect=True\nTurn: Char=Dagger ; BaseAngle=Caster ; Time=5\nPlayAnimation: Char=Dagger ; Anim={anim_1}\nWaitAnimation: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim={anim_2}; Loop=True\nChannel: Char=Dagger\nWaitSFXLoaded: SFX={sfx_2}; Reflect=True\nWaitAnimation: Char=Dagger\nStopChannel: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim={anim_3}\nWaitAnimation: Char=Dagger\nTurn: Char=Dagger ; BaseAngle=Default ; Time=4\nPlayAnimation: Char=Caster ; Anim={anim_4}\nWaitAnimation: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=600 ; UseCollisionRadius=True ; Anim={anim_5}\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=10\nWaitMove: Char=Caster\nPlaySFX: SFX={sfx_3}; Reflect=True\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=0 ; UseCollisionRadius=True ; Anim={anim_6}\nWaitMove: Char=Caster\nPlayAnimation: Char=Caster ; Anim={anim_7}\nWait: Time=5\nPlayAnimation: Char=Caster ; Speed=0\nWaitSFXDone: SFX={sfx_4}; Reflect=True\nMoveToPosition: Char=Caster ; AbsolutePosition=Default ; Anim={anim_8}\nTurn: Char=Caster ; BaseAngle=Default ; Time=4\nWaitMove: Caster\nPlayAnimation: Char=Caster ; Anim={anim_9}\nWaitTurn: Char=Caster\nActivateReflect\nWaitReflect\n",
        "placeholders": {
          "sfx_1": "SFX identifier (was Silence__Single)",
          "sfx_2": "SFX identifier (was Silence__Single)",
          "sfx_3": "SFX identifier (was Silence__Single)",
          "sfx_4": "SFX identifier (was Silence__Single)",
          "anim_1": "Animation identifier (was MP_IDLE_TO_CHANT)",
          "anim_2": "Animation identifier (was MP_CHANT)",
          "anim_3": "Animation identifier (was MP_MAGIC)",
          "anim_4": "Animation identifier (was MP_SET)",
          "anim_5": "Animation identifier (was MP_RUN)",
          "anim_6": "Animation identifier (was MP_RUN_TO_ATTACK)",
          "anim_7": "Animation identifier (was MP_ATTACK)",
          "anim_8": "Animation identifier (was MP_BACK)",
          "anim_9": "Animation identifier (was Idle)",
          "text_1": "Message text (was [MagicSword])"
        },
        "example": "// Player sequence of SFX Silence_Sword\n\nWaitAnimation: Char=Caster\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nMessage: Text=[MagicSword] ; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX=Silence__Single ; MagicCaster=Garnet ; Reflect=True\nTurn: Char=Dagger ; BaseAngle=Caster ; Time=5\nPlayAnimation: Char=Dagger ; Anim=MP_IDLE_TO_CHANT\nWaitAnimation: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim=MP_CHANT ; Loop=True\nChannel: Char=Dagger\nWaitSFXLoaded: SFX=Silence__Single ; Reflect=True\nWaitAnimation: Char=Dagger\nStopChannel: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim=MP_MAGIC\nWaitAnimation: Char=Dagger\nTurn: Char=Dagger ; BaseAngle=Default ; Time=4\nPlayAnimation: Char=Caster ; Anim=MP_SET\nWaitAnimation: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=600 ; UseCollisionRadius=True ; Anim=MP_RUN\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=10\nWaitMove: Char=Caster\nPlaySFX: SFX=Silence__Single ; Reflect=True\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=0 ; UseCollisionRadius=True ; Anim=MP_RUN_TO_ATTACK\nWaitMove: Char=Caster\nPlayAnimation: Char=Caster ; Anim=MP_ATTACK\nWait: Time=5\nPlayAnimation: Char=Caster ; Speed=0\nWaitSFXDone: SFX=Silence__Single ; Reflect=True\nMoveToPosition: Char=Caster ; AbsolutePosition=Default ; Anim=MP_BACK\nTurn: Char=Caster ; BaseAngle=Default ; Time=4\nWaitMove: Caster\nPlayAnimation: Char=Caster ; Anim=Idle\nWaitTurn: Char=Caster\nActivateReflect\nWaitReflect"
      }
    ],
    "Mini_Sword": [
      {
        "template_id": "mini_sword_playersequence",
        "target_type": "Mini_Sword",
        "label": "PlayerSequence",
        "description": "Imported from Alternate Fantasy (ef20003/PlayerSequence.seq)",
        "body": "// Player sequence of SFX Mini_Sword\n\nWaitAnimation: Char=Caster\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nMessage: Text={text_1}; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX={sfx_1}; MagicCaster=Dagger ; Reflect=True\nTurn: Char=Dagger ; BaseAngle=Caster ; Time=5\nPlayAnimation: Char=Dagger ; Anim={anim_1}\nWaitAnimation: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim={anim_2}; Loop=True\nChannel: Char=Dagger\nWaitSFXLoaded: SFX={sfx_2}; Reflect=True\nWaitAnimation: Char=Dagger\nStopChannel: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim={anim_3}\nWaitAnimation: Char=Dagger\nTurn: Char=Dagger ; BaseAngle=Default ; Time=4\nPlayAnimation: Char=Caster ; Anim={anim_4}\nWaitAnimation: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=600 ; UseCollisionRadius=True ; Anim={anim_5}\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=10\nWaitMove: Char=Caster\nPlaySFX: SFX={sfx_3}; Reflect=True\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=0 ; UseCollisionRadius=True ; Anim={anim_6}\nWaitMove: Char=Caster\nPlayAnimation: Char=Caster ; Anim={anim_7}\nWait: Time=5\nPlayAnimation: Char=Caster ; Speed=0\nWaitSFXDone: SFX={sfx_4}; Reflect=True\nMoveToPosition: Char=Caster ; AbsolutePosition=Default ; Anim={anim_8}\nTurn: Char=Caster ; BaseAngle=Default ; Time=4\nWaitMove: Caster\nPlayAnimation: Char=Caster ; Anim={anim_9}\nWaitTurn: Char=Caster\nActivateReflect\nWaitReflect\n",
        "placeholders": {
          "sfx_1": "SFX identifier (was Mini__Single)",
          "sfx_2": "SFX identifier (was Mini__Single)",
          "sfx_3": "SFX identifier (was Mini__Single)",
          "sfx_4": "SFX identifier (was Mini__Single)",
          "anim_1": "Animation identifier (was MP_IDLE_TO_CHANT)",
          "anim_2": "Animation identifier (was MP_CHANT)",
          "anim_3": "Animation identifier (was MP_MAGIC)",
          "anim_4": "Animation identifier (was MP_SET)",
          "anim_5": "Animation identifier (was MP_RUN)",
          "anim_6": "Animation identifier (was MP_RUN_TO_ATTACK)",
          "anim_7": "Animation identifier (was MP_ATTACK)",
          "anim_8": "Animation identifier (was MP_BACK)",
          "anim_9": "Animation identifier (was Idle)",
          "text_1": "Message text (was [MagicSword])"
        },
        "example": "// Player sequence of SFX Mini_Sword\n\nWaitAnimation: Char=Caster\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nMessage: Text=[MagicSword] ; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX=Mini__Single ; MagicCaster=Dagger ; Reflect=True\nTurn: Char=Dagger ; BaseAngle=Caster ; Time=5\nPlayAnimation: Char=Dagger ; Anim=MP_IDLE_TO_CHANT\nWaitAnimation: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim=MP_CHANT ; Loop=True\nChannel: Char=Dagger\nWaitSFXLoaded: SFX=Mini__Single ; Reflect=True\nWaitAnimation: Char=Dagger\nStopChannel: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim=MP_MAGIC\nWaitAnimation: Char=Dagger\nTurn: Char=Dagger ; BaseAngle=Default ; Time=4\nPlayAnimation: Char=Caster ; Anim=MP_SET\nWaitAnimation: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=600 ; UseCollisionRadius=True ; Anim=MP_RUN\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=10\nWaitMove: Char=Caster\nPlaySFX: SFX=Mini__Single ; Reflect=True\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=0 ; UseCollisionRadius=True ; Anim=MP_RUN_TO_ATTACK\nWaitMove: Char=Caster\nPlayAnimation: Char=Caster ; Anim=MP_ATTACK\nWait: Time=5\nPlayAnimation: Char=Caster ; Speed=0\nWaitSFXDone: SFX=Mini__Single ; Reflect=True\nMoveToPosition: Char=Caster ; AbsolutePosition=Default ; Anim=MP_BACK\nTurn: Char=Caster ; BaseAngle=Default ; Time=4\nWaitMove: Caster\nPlayAnimation: Char=Caster ; Anim=Idle\nWaitTurn: Char=Caster\nActivateReflect\nWaitReflect"
      }
    ],
    "Confuse_Sword": [
      {
        "template_id": "confuse_sword_playersequence",
        "target_type": "Confuse_Sword",
        "label": "PlayerSequence",
        "description": "Imported from Alternate Fantasy (ef20004/PlayerSequence.seq)",
        "body": "// Player sequence of SFX Confuse_Sword\n\nWaitAnimation: Char=Caster\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nMessage: Text={text_1}; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX={sfx_1}; MagicCaster=Garnet ; Reflect=True\nTurn: Char=Dagger ; BaseAngle=Caster ; Time=5\nPlayAnimation: Char=Dagger ; Anim={anim_1}\nWaitAnimation: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim={anim_2}; Loop=True\nChannel: Char=Dagger\nWaitSFXLoaded: SFX={sfx_2}; Reflect=True\nWaitAnimation: Char=Dagger\nStopChannel: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim={anim_3}\nWaitAnimation: Char=Dagger\nTurn: Char=Dagger ; BaseAngle=Default ; Time=4\nPlayAnimation: Char=Caster ; Anim={anim_4}\nWaitAnimation: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=600 ; UseCollisionRadius=True ; Anim={anim_5}\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=10\nWaitMove: Char=Caster\nPlaySFX: SFX={sfx_3}; Reflect=True\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=0 ; UseCollisionRadius=True ; Anim={anim_6}\nWaitMove: Char=Caster\nPlayAnimation: Char=Caster ; Anim={anim_7}\nWait: Time=5\nPlayAnimation: Char=Caster ; Speed=0\nWaitSFXDone: SFX={sfx_4}; Reflect=True\nMoveToPosition: Char=Caster ; AbsolutePosition=Default ; Anim={anim_8}\nTurn: Char=Caster ; BaseAngle=Default ; Time=4\nWaitMove: Caster\nPlayAnimation: Char=Caster ; Anim={anim_9}\nWaitTurn: Char=Caster\nActivateReflect\nWaitReflect\n",
        "placeholders": {
          "sfx_1": "SFX identifier (was Confuse__Single)",
          "sfx_2": "SFX identifier (was Confuse__Single)",
          "sfx_3": "SFX identifier (was Confuse__Single)",
          "sfx_4": "SFX identifier (was Confuse__Single)",
          "anim_1": "Animation identifier (was MP_IDLE_TO_CHANT)",
          "anim_2": "Animation identifier (was MP_CHANT)",
          "anim_3": "Animation identifier (was MP_MAGIC)",
          "anim_4": "Animation identifier (was MP_SET)",
          "anim_5": "Animation identifier (was MP_RUN)",
          "anim_6": "Animation identifier (was MP_RUN_TO_ATTACK)",
          "anim_7": "Animation identifier (was MP_ATTACK)",
          "anim_8": "Animation identifier (was MP_BACK)",
          "anim_9": "Animation identifier (was Idle)",
          "text_1": "Message text (was [MagicSword])"
        },
        "example": "// Player sequence of SFX Confuse_Sword\n\nWaitAnimation: Char=Caster\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nMessage: Text=[MagicSword] ; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX=Confuse__Single ; MagicCaster=Garnet ; Reflect=True\nTurn: Char=Dagger ; BaseAngle=Caster ; Time=5\nPlayAnimation: Char=Dagger ; Anim=MP_IDLE_TO_CHANT\nWaitAnimation: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim=MP_CHANT ; Loop=True\nChannel: Char=Dagger\nWaitSFXLoaded: SFX=Confuse__Single ; Reflect=True\nWaitAnimation: Char=Dagger\nStopChannel: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim=MP_MAGIC\nWaitAnimation: Char=Dagger\nTurn: Char=Dagger ; BaseAngle=Default ; Time=4\nPlayAnimation: Char=Caster ; Anim=MP_SET\nWaitAnimation: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=600 ; UseCollisionRadius=True ; Anim=MP_RUN\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=10\nWaitMove: Char=Caster\nPlaySFX: SFX=Confuse__Single ; Reflect=True\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=0 ; UseCollisionRadius=True ; Anim=MP_RUN_TO_ATTACK\nWaitMove: Char=Caster\nPlayAnimation: Char=Caster ; Anim=MP_ATTACK\nWait: Time=5\nPlayAnimation: Char=Caster ; Speed=0\nWaitSFXDone: SFX=Confuse__Single ; Reflect=True\nMoveToPosition: Char=Caster ; AbsolutePosition=Default ; Anim=MP_BACK\nTurn: Char=Caster ; BaseAngle=Default ; Time=4\nWaitMove: Caster\nPlayAnimation: Char=Caster ; Anim=Idle\nWaitTurn: Char=Caster\nActivateReflect\nWaitReflect"
      }
    ],
    "Berserk_Sword": [
      {
        "template_id": "berserk_sword_playersequence",
        "target_type": "Berserk_Sword",
        "label": "PlayerSequence",
        "description": "Imported from Alternate Fantasy (ef20005/PlayerSequence.seq)",
        "body": "// Player sequence of SFX Berserk_Sword\n\nWaitAnimation: Char=Caster\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nMessage: Text={text_1}; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX={sfx_1}; MagicCaster=Garnet ; Reflect=True\nTurn: Char=Dagger ; BaseAngle=Caster ; Time=5\nPlayAnimation: Char=Dagger ; Anim={anim_1}\nWaitAnimation: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim={anim_2}; Loop=True\nChannel: Char=Dagger\nWaitSFXLoaded: SFX={sfx_2}; Reflect=True\nWaitAnimation: Char=Dagger\nStopChannel: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim={anim_3}\nWaitAnimation: Char=Dagger\nTurn: Char=Dagger ; BaseAngle=Default ; Time=4\nPlayAnimation: Char=Caster ; Anim={anim_4}\nWaitAnimation: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=600 ; UseCollisionRadius=True ; Anim={anim_5}\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=10\nWaitMove: Char=Caster\nPlaySFX: SFX={sfx_3}; Reflect=True\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=0 ; UseCollisionRadius=True ; Anim={anim_6}\nWaitMove: Char=Caster\nPlayAnimation: Char=Caster ; Anim={anim_7}\nWait: Time=5\nPlayAnimation: Char=Caster ; Speed=0\nWaitSFXDone: SFX={sfx_4}; Reflect=True\nMoveToPosition: Char=Caster ; AbsolutePosition=Default ; Anim={anim_8}\nTurn: Char=Caster ; BaseAngle=Default ; Time=4\nWaitMove: Caster\nPlayAnimation: Char=Caster ; Anim={anim_9}\nWaitTurn: Char=Caster\nActivateReflect\nWaitReflect\n",
        "placeholders": {
          "sfx_1": "SFX identifier (was Berserk__Single)",
          "sfx_2": "SFX identifier (was Berserk__Single)",
          "sfx_3": "SFX identifier (was Berserk__Single)",
          "sfx_4": "SFX identifier (was Berserk__Single)",
          "anim_1": "Animation identifier (was MP_IDLE_TO_CHANT)",
          "anim_2": "Animation identifier (was MP_CHANT)",
          "anim_3": "Animation identifier (was MP_MAGIC)",
          "anim_4": "Animation identifier (was MP_SET)",
          "anim_5": "Animation identifier (was MP_RUN)",
          "anim_6": "Animation identifier (was MP_RUN_TO_ATTACK)",
          "anim_7": "Animation identifier (was MP_ATTACK)",
          "anim_8": "Animation identifier (was MP_BACK)",
          "anim_9": "Animation identifier (was Idle)",
          "text_1": "Message text (was [MagicSword])"
        },
        "example": "// Player sequence of SFX Berserk_Sword\n\nWaitAnimation: Char=Caster\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nMessage: Text=[MagicSword] ; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX=Berserk__Single ; MagicCaster=Garnet ; Reflect=True\nTurn: Char=Dagger ; BaseAngle=Caster ; Time=5\nPlayAnimation: Char=Dagger ; Anim=MP_IDLE_TO_CHANT\nWaitAnimation: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim=MP_CHANT ; Loop=True\nChannel: Char=Dagger\nWaitSFXLoaded: SFX=Berserk__Single ; Reflect=True\nWaitAnimation: Char=Dagger\nStopChannel: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim=MP_MAGIC\nWaitAnimation: Char=Dagger\nTurn: Char=Dagger ; BaseAngle=Default ; Time=4\nPlayAnimation: Char=Caster ; Anim=MP_SET\nWaitAnimation: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=600 ; UseCollisionRadius=True ; Anim=MP_RUN\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=10\nWaitMove: Char=Caster\nPlaySFX: SFX=Berserk__Single ; Reflect=True\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=0 ; UseCollisionRadius=True ; Anim=MP_RUN_TO_ATTACK\nWaitMove: Char=Caster\nPlayAnimation: Char=Caster ; Anim=MP_ATTACK\nWait: Time=5\nPlayAnimation: Char=Caster ; Speed=0\nWaitSFXDone: SFX=Berserk__Single ; Reflect=True\nMoveToPosition: Char=Caster ; AbsolutePosition=Default ; Anim=MP_BACK\nTurn: Char=Caster ; BaseAngle=Default ; Time=4\nWaitMove: Caster\nPlayAnimation: Char=Caster ; Anim=Idle\nWaitTurn: Char=Caster\nActivateReflect\nWaitReflect"
      }
    ],
    "Blind_Sword": [
      {
        "template_id": "blind_sword_playersequence",
        "target_type": "Blind_Sword",
        "label": "PlayerSequence",
        "description": "Imported from Alternate Fantasy (ef20006/PlayerSequence.seq)",
        "body": "// Player sequence of SFX Blind_Sword\n\nWaitAnimation: Char=Caster\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nMessage: Text={text_1}; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX={sfx_1}; MagicCaster=Garnet ; Reflect=True\nTurn: Char=Dagger ; BaseAngle=Caster ; Time=5\nPlayAnimation: Char=Dagger ; Anim={anim_1}\nWaitAnimation: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim={anim_2}; Loop=True\nChannel: Char=Dagger\nWaitSFXLoaded: SFX={sfx_2}; Reflect=True\nWaitAnimation: Char=Dagger\nStopChannel: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim={anim_3}\nWaitAnimation: Char=Dagger\nTurn: Char=Dagger ; BaseAngle=Default ; Time=4\nPlayAnimation: Char=Caster ; Anim={anim_4}\nWaitAnimation: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=600 ; UseCollisionRadius=True ; Anim={anim_5}\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=10\nWaitMove: Char=Caster\nPlaySFX: SFX={sfx_3}; Reflect=True\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=0 ; UseCollisionRadius=True ; Anim={anim_6}\nWaitMove: Char=Caster\nPlayAnimation: Char=Caster ; Anim={anim_7}\nWait: Time=5\nPlayAnimation: Char=Caster ; Speed=0\nWaitSFXDone: SFX={sfx_4}; Reflect=True\nMoveToPosition: Char=Caster ; AbsolutePosition=Default ; Anim={anim_8}\nTurn: Char=Caster ; BaseAngle=Default ; Time=4\nWaitMove: Caster\nPlayAnimation: Char=Caster ; Anim={anim_9}\nWaitTurn: Char=Caster\nActivateReflect\nWaitReflect\n",
        "placeholders": {
          "sfx_1": "SFX identifier (was Blind__Single)",
          "sfx_2": "SFX identifier (was Blind__Single)",
          "sfx_3": "SFX identifier (was Blind__Single)",
          "sfx_4": "SFX identifier (was Blind__Single)",
          "anim_1": "Animation identifier (was MP_IDLE_TO_CHANT)",
          "anim_2": "Animation identifier (was MP_CHANT)",
          "anim_3": "Animation identifier (was MP_MAGIC)",
          "anim_4": "Animation identifier (was MP_SET)",
          "anim_5": "Animation identifier (was MP_RUN)",
          "anim_6": "Animation identifier (was MP_RUN_TO_ATTACK)",
          "anim_7": "Animation identifier (was MP_ATTACK)",
          "anim_8": "Animation identifier (was MP_BACK)",
          "anim_9": "Animation identifier (was Idle)",
          "text_1": "Message text (was [MagicSword])"
        },
        "example": "// Player sequence of SFX Blind_Sword\n\nWaitAnimation: Char=Caster\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nMessage: Text=[MagicSword] ; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX=Blind__Single ; MagicCaster=Garnet ; Reflect=True\nTurn: Char=Dagger ; BaseAngle=Caster ; Time=5\nPlayAnimation: Char=Dagger ; Anim=MP_IDLE_TO_CHANT\nWaitAnimation: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim=MP_CHANT ; Loop=True\nChannel: Char=Dagger\nWaitSFXLoaded: SFX=Blind__Single ; Reflect=True\nWaitAnimation: Char=Dagger\nStopChannel: Char=Dagger\nPlayAnimation: Char=Dagger ; Anim=MP_MAGIC\nWaitAnimation: Char=Dagger\nTurn: Char=Dagger ; BaseAngle=Default ; Time=4\nPlayAnimation: Char=Caster ; Anim=MP_SET\nWaitAnimation: Char=Caster\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=600 ; UseCollisionRadius=True ; Anim=MP_RUN\nTurn: Char=Caster ; BaseAngle=AllTargets ; Time=10\nWaitMove: Char=Caster\nPlaySFX: SFX=Blind__Single ; Reflect=True\nMoveToTarget: Char=Caster ; Target=AllTargets ; Distance=0 ; UseCollisionRadius=True ; Anim=MP_RUN_TO_ATTACK\nWaitMove: Char=Caster\nPlayAnimation: Char=Caster ; Anim=MP_ATTACK\nWait: Time=5\nPlayAnimation: Char=Caster ; Speed=0\nWaitSFXDone: SFX=Blind__Single ; Reflect=True\nMoveToPosition: Char=Caster ; AbsolutePosition=Default ; Anim=MP_BACK\nTurn: Char=Caster ; BaseAngle=Default ; Time=4\nWaitMove: Caster\nPlayAnimation: Char=Caster ; Anim=Idle\nWaitTurn: Char=Caster\nActivateReflect\nWaitReflect"
      }
    ],
    "Magic_Frenzy": [
      {
        "template_id": "magic_frenzy_playersequence",
        "target_type": "Magic_Frenzy",
        "label": "PlayerSequence",
        "description": "Imported from Alternate Fantasy (ef20007/PlayerSequence.seq)",
        "body": "// Player sequence of custom SFX Magic_Frenzy\n\nWaitAnimation: Char=Caster\nStartThread: Condition=CasterRow == 0 && AreCasterAndSelectedTargetsEnemies ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, 400) ; Anim={anim_1}\n\tWaitMove: Char=Caster\nEndThread\nStartThread: Condition=IsSingleSelectedTarget\n\tTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nEndThread\nMessage: Text={text_1}; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nStartThread: Condition=IsSingleTarget ; Sync=True\n\tLoadSFX: SFX={sfx_1}; Reflect=True ; UseCamera=False\n\tStartThread: Condition=ItemUseId == 255 ; Sync=True\n\t\tPlayAnimation: Char=Caster ; Anim={anim_2}\n\t\tWaitAnimation: Char=Caster\n\t\tPlayAnimation: Char=Caster ; Anim={anim_3}; Loop=True\n\t\tChannel\n\t\tWaitSFXLoaded: SFX={sfx_2}; Reflect=True\n\t\tWaitAnimation: Char=Caster\n\t\tStopChannel\n\t\tPlayAnimation: Char=Caster ; Anim={anim_4}\n\t\tWaitAnimation: Char=Caster\n\tEndThread\n\tStartThread: Condition=ItemUseId != 255 ; Sync=True\n\t\tPlayAnimation: Char=Caster ; Anim={anim_5}\n\t\tWaitAnimation: Char=Caster\n\t\tWaitSFXLoaded: SFX={sfx_3}; Reflect=True\n\tEndThread\n\tPlaySFX: SFX={sfx_4}; HideMeshes=0,2,3,4,5 ; MeshColors=1:(0.9,1.1,0.5,0.8),6:(0.8,0.2,0.1,0.4) ; Reflect=True\n\tCreateVisualEffect: SFXModel=CustomEffects/MagicFrenzy.sfxmodel ; Char=AllTargets ; Reflect=True\n\tWaitSFXDone: SFX={sfx_5}; Reflect=True\nEndThread\nStartThread: Condition=!IsSingleTarget ; Sync=True\n\tStartThread: Condition=ItemUseId == 255 ; Sync=True\n\t\tPlayAnimation: Char=Caster ; Anim={anim_6}\n\t\tWaitAnimation: Char=Caster\n\t\tPlayAnimation: Char=Caster ; Anim={anim_7}; Loop=True\n\t\tChannel\n\t\tWaitAnimation: Char=Caster\n\t\tWaitAnimation: Char=Caster\n\t\tStopChannel\n\t\tPlayAnimation: Char=Caster ; Anim={anim_8}\n\t\tWaitAnimation: Char=Caster\n\tEndThread\n\tStartThread: Condition=ItemUseId != 255 ; Sync=True\n\t\tPlayAnimation: Char=Caster ; Anim={anim_9}\n\t\tWaitAnimation: Char=Caster\n\tEndThread\n\tStartThread: TargetLoop=True ; Chain=True ; Sync=True\n\t\tLoadSFX: SFX={sfx_6}; Reflect=True ; UseCamera=False\n\t\tWaitSFXLoaded: SFX={sfx_7}; Reflect=True\n\t\tPlaySFX: SFX={sfx_8}; HideMeshes=0,2,3,4,5 ; MeshColors=1:(0.9,1.1,0.5,0.8),6:(0.8,0.2,0.1,0.4) ; Reflect=True\n\t\tCreateVisualEffect: SFXModel=CustomEffects/MagicFrenzy.sfxmodel ; Char=AllTargets ; Reflect=True\n\t\tWait: Time=10\n\tEndThread\n\tWaitSFXDone: SFX={sfx_9}; Reflect=True\nEndThread\nActivateReflect\nWaitReflect\nStartThread: Condition=CasterRow == 0 && AreCasterAndSelectedTargetsEnemies ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, -400) ; Anim={anim_10}\n\tWaitMove: Char=Caster\nEndThread\nPlayAnimation: Char=Caster ; Anim={anim_11}\nTurn: Char=Caster ; BaseAngle=Default ; Time=5\nWaitTurn: Char=Caster\n",
        "placeholders": {
          "sfx_1": "SFX identifier (was Lightning)",
          "sfx_2": "SFX identifier (was Lightning)",
          "sfx_3": "SFX identifier (was Lightning)",
          "sfx_4": "SFX identifier (was Lightning)",
          "sfx_5": "SFX identifier (was Lightning)",
          "sfx_6": "SFX identifier (was Lightning)",
          "sfx_7": "SFX identifier (was Lightning)",
          "sfx_8": "SFX identifier (was Lightning)",
          "sfx_9": "SFX identifier (was Lightning)",
          "anim_1": "Animation identifier (was MP_STEP_FORWARD)",
          "anim_2": "Animation identifier (was MP_IDLE_TO_CHANT)",
          "anim_3": "Animation identifier (was MP_CHANT)",
          "anim_4": "Animation identifier (was MP_MAGIC)",
          "anim_5": "Animation identifier (was MP_ITEM1)",
          "anim_6": "Animation identifier (was MP_IDLE_TO_CHANT)",
          "anim_7": "Animation identifier (was MP_CHANT)",
          "anim_8": "Animation identifier (was MP_MAGIC)",
          "anim_9": "Animation identifier (was MP_ITEM1)",
          "anim_10": "Animation identifier (was MP_STEP_BACK)",
          "anim_11": "Animation identifier (was Idle)",
          "text_1": "Message text (was [CastName])"
        },
        "example": "// Player sequence of custom SFX Magic_Frenzy\n\nWaitAnimation: Char=Caster\nStartThread: Condition=CasterRow == 0 && AreCasterAndSelectedTargetsEnemies ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, 400) ; Anim=MP_STEP_FORWARD\n\tWaitMove: Char=Caster\nEndThread\nStartThread: Condition=IsSingleSelectedTarget\n\tTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nEndThread\nMessage: Text=[CastName] ; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nStartThread: Condition=IsSingleTarget ; Sync=True\n\tLoadSFX: SFX=Lightning ; Reflect=True ; UseCamera=False\n\tStartThread: Condition=ItemUseId == 255 ; Sync=True\n\t\tPlayAnimation: Char=Caster ; Anim=MP_IDLE_TO_CHANT\n\t\tWaitAnimation: Char=Caster\n\t\tPlayAnimation: Char=Caster ; Anim=MP_CHANT ; Loop=True\n\t\tChannel\n\t\tWaitSFXLoaded: SFX=Lightning ; Reflect=True\n\t\tWaitAnimation: Char=Caster\n\t\tStopChannel\n\t\tPlayAnimation: Char=Caster ; Anim=MP_MAGIC\n\t\tWaitAnimation: Char=Caster\n\tEndThread\n\tStartThread: Condition=ItemUseId != 255 ; Sync=True\n\t\tPlayAnimation: Char=Caster ; Anim=MP_ITEM1\n\t\tWaitAnimation: Char=Caster\n\t\tWaitSFXLoaded: SFX=Lightning ; Reflect=True\n\tEndThread\n\tPlaySFX: SFX=Lightning ; HideMeshes=0,2,3,4,5 ; MeshColors=1:(0.9,1.1,0.5,0.8),6:(0.8,0.2,0.1,0.4) ; Reflect=True\n\tCreateVisualEffect: SFXModel=CustomEffects/MagicFrenzy.sfxmodel ; Char=AllTargets ; Reflect=True\n\tWaitSFXDone: SFX=Lightning ; Reflect=True\nEndThread\nStartThread: Condition=!IsSingleTarget ; Sync=True\n\tStartThread: Condition=ItemUseId == 255 ; Sync=True\n\t\tPlayAnimation: Char=Caster ; Anim=MP_IDLE_TO_CHANT\n\t\tWaitAnimation: Char=Caster\n\t\tPlayAnimation: Char=Caster ; Anim=MP_CHANT ; Loop=True\n\t\tChannel\n\t\tWaitAnimation: Char=Caster\n\t\tWaitAnimation: Char=Caster\n\t\tStopChannel\n\t\tPlayAnimation: Char=Caster ; Anim=MP_MAGIC\n\t\tWaitAnimation: Char=Caster\n\tEndThread\n\tStartThread: Condition=ItemUseId != 255 ; Sync=True\n\t\tPlayAnimation: Char=Caster ; Anim=MP_ITEM1\n\t\tWaitAnimation: Char=Caster\n\tEndThread\n\tStartThread: TargetLoop=True ; Chain=True ; Sync=True\n\t\tLoadSFX: SFX=Lightning ; Reflect=True ; UseCamera=False\n\t\tWaitSFXLoaded: SFX=Lightning ; Reflect=True\n\t\tPlaySFX: SFX=Lightning ; HideMeshes=0,2,3,4,5 ; MeshColors=1:(0.9,1.1,0.5,0.8),6:(0.8,0.2,0.1,0.4) ; Reflect=True\n\t\tCreateVisualEffect: SFXModel=CustomEffects/MagicFrenzy.sfxmodel ; Char=AllTargets ; Reflect=True\n\t\tWait: Time=10\n\tEndThread\n\tWaitSFXDone: SFX=Lightning ; Reflect=True\nEndThread\nActivateReflect\nWaitReflect\nStartThread: Condition=CasterRow == 0 && AreCasterAndSelectedTargetsEnemies ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, -400) ; Anim=MP_STEP_BACK\n\tWaitMove: Char=Caster\nEndThread\nPlayAnimation: Char=Caster ; Anim=Idle\nTurn: Char=Caster ; BaseAngle=Default ; Time=5\nWaitTurn: Char=Caster"
      }
    ],
    "Channeling + Trine": [
      {
        "template_id": "channeling_trine_playersequence",
        "target_type": "Channeling + Trine",
        "label": "PlayerSequence",
        "description": "Imported from Alternate Fantasy (ef20008/PlayerSequence.seq)",
        "body": "// Player sequence of SFX Channeling + Trine\n\nStartThread: Condition=CommandId != 98 ; Sync\n\tWaitAnimation: Char=Caster\n\tMessage: Text={text_1}; Priority=1 ; Title=True ; Reflect=True\n\tPlayAnimation: Char=Caster ; Anim={anim_1}\n\tWaitAnimation: Char=Caster\n\tPlayAnimation: Char=Caster ; Anim={anim_2}; Loop=True\n\tChannel\n\tWaitAnimation: Char=Caster\n\tWaitAnimation: Char=Caster\n\tStopChannel\n\tEffectPoint: Char=Caster ; Type=Effect\n\tEffectPoint: Char=Everyone ; Type=Figure\nElseThread: Sync\n\tWaitAnimation: Char=Caster\n\tPlayAnimation: Char=Caster ; Anim={anim_3}; Loop=True\n\tMessage: Text={text_2}; Priority=1 ; Title=True ; Reflect=True\n\tStartThread: Condition=IsSingleTarget ; Sync=True\n\t\tSetupReflect: Delay=SFXLoaded\n\t\tLoadSFX: SFX={sfx_1}; Reflect=True\n\t\tWaitSFXLoaded: SFX={sfx_2}; Reflect=True\n\t\tWaitAnimation: Char=Caster\n\t\tPlayAnimation: Char=Caster ; Anim={anim_4}\n\t\tWaitAnimation: Char=Caster\n\t\tPlaySFX: SFX={sfx_3}; Reflect=True\n\t\tWaitSFXDone: SFX={sfx_4}; Reflect=True\n\tElseThread: Sync\n\t\tWaitAnimation: Char=Caster\n\t\tSetupReflect: Delay=SFXLoaded\n\t\tPlayAnimation: Char=Caster ; Anim={anim_5}\n\t\tWaitAnimation: Char=Caster\n\t\tStartThread: TargetLoop=True ; Chain=True ; Sync=True\n\t\t\tLoadSFX: SFX={sfx_5}; Reflect=True ; UseCamera=False\n\t\t\tWaitSFXLoaded: SFX={sfx_6}; Reflect=True\n\t\t\tPlaySFX: SFX={sfx_7}; Reflect=True\n\t\t\tWait: Time=10\n\t\tEndThread\n\t\tWaitSFXDone: SFX={sfx_8}; Reflect=True\n\tEndThread\n\tActivateReflect\n\tWaitReflect\n\tPlayAnimation: Char=Caster ; Anim={anim_6}\nEndThread\n",
        "placeholders": {
          "sfx_1": "SFX identifier (was Delta_Attack)",
          "sfx_2": "SFX identifier (was Delta_Attack)",
          "sfx_3": "SFX identifier (was Delta_Attack)",
          "sfx_4": "SFX identifier (was Delta_Attack)",
          "sfx_5": "SFX identifier (was Delta_Attack)",
          "sfx_6": "SFX identifier (was Delta_Attack)",
          "sfx_7": "SFX identifier (was Delta_Attack)",
          "sfx_8": "SFX identifier (was Delta_Attack)",
          "anim_1": "Animation identifier (was MP_IDLE_TO_CHANT)",
          "anim_2": "Animation identifier (was MP_CHANT)",
          "anim_3": "Animation identifier (was MP_CHANT)",
          "anim_4": "Animation identifier (was MP_MAGIC)",
          "anim_5": "Animation identifier (was MP_MAGIC)",
          "anim_6": "Animation identifier (was Idle)",
          "text_1": "Message text (was [CommandTitle=8])",
          "text_2": "Message text (was [CastName])"
        },
        "example": "// Player sequence of SFX Channeling + Trine\n\nStartThread: Condition=CommandId != 98 ; Sync\n\tWaitAnimation: Char=Caster\n\tMessage: Text=[CommandTitle=8] ; Priority=1 ; Title=True ; Reflect=True\n\tPlayAnimation: Char=Caster ; Anim=MP_IDLE_TO_CHANT\n\tWaitAnimation: Char=Caster\n\tPlayAnimation: Char=Caster ; Anim=MP_CHANT ; Loop=True\n\tChannel\n\tWaitAnimation: Char=Caster\n\tWaitAnimation: Char=Caster\n\tStopChannel\n\tEffectPoint: Char=Caster ; Type=Effect\n\tEffectPoint: Char=Everyone ; Type=Figure\nElseThread: Sync\n\tWaitAnimation: Char=Caster\n\tPlayAnimation: Char=Caster ; Anim=MP_CHANT ; Loop=True\n\tMessage: Text=[CastName] ; Priority=1 ; Title=True ; Reflect=True\n\tStartThread: Condition=IsSingleTarget ; Sync=True\n\t\tSetupReflect: Delay=SFXLoaded\n\t\tLoadSFX: SFX=Delta_Attack ; Reflect=True\n\t\tWaitSFXLoaded: SFX=Delta_Attack ; Reflect=True\n\t\tWaitAnimation: Char=Caster\n\t\tPlayAnimation: Char=Caster ; Anim=MP_MAGIC\n\t\tWaitAnimation: Char=Caster\n\t\tPlaySFX: SFX=Delta_Attack ; Reflect=True\n\t\tWaitSFXDone: SFX=Delta_Attack ; Reflect=True\n\tElseThread: Sync\n\t\tWaitAnimation: Char=Caster\n\t\tSetupReflect: Delay=SFXLoaded\n\t\tPlayAnimation: Char=Caster ; Anim=MP_MAGIC\n\t\tWaitAnimation: Char=Caster\n\t\tStartThread: TargetLoop=True ; Chain=True ; Sync=True\n\t\t\tLoadSFX: SFX=Delta_Attack ; Reflect=True ; UseCamera=False\n\t\t\tWaitSFXLoaded: SFX=Delta_Attack ; Reflect=True\n\t\t\tPlaySFX: SFX=Delta_Attack ; Reflect=True\n\t\t\tWait: Time=10\n\t\tEndThread\n\t\tWaitSFXDone: SFX=Delta_Attack ; Reflect=True\n\tEndThread\n\tActivateReflect\n\tWaitReflect\n\tPlayAnimation: Char=Caster ; Anim=Idle\nEndThread"
      }
    ],
    "Poly": [
      {
        "template_id": "poly_sequence",
        "target_type": "Poly",
        "label": "Sequence",
        "description": "Imported from Alternate Fantasy (ef293/Sequence.seq)",
        "body": "// Shared sequence of SFX Poly\n// Have the target plays the \"victory\" animation for Transcend\n\nStartThread: Condition=ScriptId == 96 && TargetIsPlayer\n\tPlayAnimation: Char=AllTargets ; Anim={anim_1}\n\tWaitAnimation: Char=AllTargets\n\tPlayAnimation: Char=AllTargets ; Anim={anim_2}; Loop\nEndThread\nSetBackgroundIntensity: Intensity=0.5 ; Time=4 ; HoldDuration=101\nPlaySound: Sound=1049\nPlaySound: Sound=1050\nPlaySound: Sound=1051\nWait: Time=45\nStartThread: Condition=ScriptId == 96 && TargetIsPlayer\n\tPlayAnimation: Char=AllTargets\nEndThread\nWait: Time=10\nEffectPoint: Char=AllTargets ; Type=Effect\nWait: Time=22\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=24\nSetBackgroundIntensity: Intensity=1 ; Time=8\nWait: Time=8\n",
        "placeholders": {
          "anim_1": "Animation identifier (was MP_WIN)",
          "anim_2": "Animation identifier (was MP_WIN_LOOP)"
        },
        "example": "// Shared sequence of SFX Poly\n// Have the target plays the \"victory\" animation for Transcend\n\nStartThread: Condition=ScriptId == 96 && TargetIsPlayer\n\tPlayAnimation: Char=AllTargets ; Anim=MP_WIN\n\tWaitAnimation: Char=AllTargets\n\tPlayAnimation: Char=AllTargets ; Anim=MP_WIN_LOOP ; Loop\nEndThread\nSetBackgroundIntensity: Intensity=0.5 ; Time=4 ; HoldDuration=101\nPlaySound: Sound=1049\nPlaySound: Sound=1050\nPlaySound: Sound=1051\nWait: Time=45\nStartThread: Condition=ScriptId == 96 && TargetIsPlayer\n\tPlayAnimation: Char=AllTargets\nEndThread\nWait: Time=10\nEffectPoint: Char=AllTargets ; Type=Effect\nWait: Time=22\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=24\nSetBackgroundIntensity: Intensity=1 ; Time=8\nWait: Time=8"
      }
    ],
    "Doomsday": [
      {
        "template_id": "doomsday_playersequence",
        "target_type": "Doomsday",
        "label": "PlayerSequence",
        "description": "Imported from Alternate Fantasy (ef308/PlayerSequence.seq)",
        "body": "// Player sequence of SFX Doomsday\n\nWaitAnimation: Char=Caster\nSetVariable: Variable=cmd_status ; Value=&65533 ; Reflect=True\nStartThread: Condition=CasterRow == 0 ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, 400) ; Anim={anim_1}\n\tWaitMove: Char=Caster\nEndThread\nStartThread: Condition=IsSingleSelectedTarget\n\tTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nEndThread\nMessage: Text={text_1}; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX={sfx_1}; Reflect=True ; UseCamera=True\nStartThread: Condition=ItemUseId == 255 ; Sync=True\n\tStartThread: Condition=CasterCharacterIndex == CharacterId_Vivi ; Sync\n\t\tPlayAnimation: Char=Caster ; Anim={anim_2}\n\t\tWaitAnimation: Char=Caster\n\t\tChannel\n\t\tPlayAnimation: Char=Caster ; Anim={anim_3}\n\t\tWaitAnimation: Char=Caster\n\t\tStopChannel\n\t\tPlayAnimation: Char=Caster ; Anim={anim_4}; Loop=True\n\t\tWaitSFXLoaded: SFX={sfx_2}; Reflect=True\n\t\tWaitAnimation: Char=Caster\n\t\tStartThread\n\t\t\tWait: Time=10\n\t\t\tPlayAnimation: Char=Caster ; Anim={anim_5}\n\t\tEndThread\n\tEndThread\n\tStartThread: Condition=CasterCharacterIndex != CharacterId_Vivi ; Sync\n\t\tPlayAnimation: Char=Caster ; Anim={anim_6}\n\t\tWaitAnimation: Char=Caster\n\t\tPlayAnimation: Char=Caster ; Anim={anim_7}; Loop=True\n\t\tChannel\n\t\tWaitSFXLoaded: SFX={sfx_3}; Reflect=True\n\t\tWaitAnimation: Char=Caster\n\t\tStopChannel\n\t\tPlayAnimation: Char=Caster ; Anim={anim_8}\n\t\tWaitAnimation: Char=Caster\n\tEndThread\nEndThread\nStartThread: Condition=ItemUseId != 255 ; Sync=True\n\tPlayAnimation: Char=Caster ; Anim={anim_9}\n\tWaitAnimation: Char=Caster\n\tWaitSFXLoaded: SFX={sfx_4}; Reflect=True\nEndThread\nPlaySFX: SFX={sfx_5}; Reflect=True\nWaitSFXDone: SFX={sfx_6}; Reflect=True\nSetVariable: Variable=cmd_status ; Value=|2 ; Reflect=True\nActivateReflect\nWaitReflect\nStartThread: Condition=CasterRow == 0 ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, -400) ; Anim={anim_10}\n\tWaitMove: Char=Caster\nEndThread\nPlayAnimation: Char=Caster ; Anim={anim_11}\nTurn: Char=Caster ; BaseAngle=Default ; Time=5\nWaitTurn: Char=Caster\n",
        "placeholders": {
          "sfx_1": "SFX identifier (was Doomsday)",
          "sfx_2": "SFX identifier (was Doomsday)",
          "sfx_3": "SFX identifier (was Doomsday)",
          "sfx_4": "SFX identifier (was Doomsday)",
          "sfx_5": "SFX identifier (was Doomsday)",
          "sfx_6": "SFX identifier (was Doomsday)",
          "anim_1": "Animation identifier (was MP_STEP_FORWARD)",
          "anim_2": "Animation identifier (was ANH_MAIN_B0_006_600)",
          "anim_3": "Animation identifier (was ANH_MAIN_B0_006_601)",
          "anim_4": "Animation identifier (was ANH_MAIN_B0_006_602)",
          "anim_5": "Animation identifier (was MP_IDLE_CMD)",
          "anim_6": "Animation identifier (was MP_IDLE_TO_CHANT)",
          "anim_7": "Animation identifier (was MP_CHANT)",
          "anim_8": "Animation identifier (was MP_MAGIC)",
          "anim_9": "Animation identifier (was MP_ITEM1)",
          "anim_10": "Animation identifier (was MP_STEP_BACK)",
          "anim_11": "Animation identifier (was Idle)",
          "text_1": "Message text (was [CastName])"
        },
        "example": "// Player sequence of SFX Doomsday\n\nWaitAnimation: Char=Caster\nSetVariable: Variable=cmd_status ; Value=&65533 ; Reflect=True\nStartThread: Condition=CasterRow == 0 ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, 400) ; Anim=MP_STEP_FORWARD\n\tWaitMove: Char=Caster\nEndThread\nStartThread: Condition=IsSingleSelectedTarget\n\tTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nEndThread\nMessage: Text=[CastName] ; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX=Doomsday ; Reflect=True ; UseCamera=True\nStartThread: Condition=ItemUseId == 255 ; Sync=True\n\tStartThread: Condition=CasterCharacterIndex == CharacterId_Vivi ; Sync\n\t\tPlayAnimation: Char=Caster ; Anim=ANH_MAIN_B0_006_600\n\t\tWaitAnimation: Char=Caster\n\t\tChannel\n\t\tPlayAnimation: Char=Caster ; Anim=ANH_MAIN_B0_006_601\n\t\tWaitAnimation: Char=Caster\n\t\tStopChannel\n\t\tPlayAnimation: Char=Caster ; Anim=ANH_MAIN_B0_006_602 ; Loop=True\n\t\tWaitSFXLoaded: SFX=Doomsday ; Reflect=True\n\t\tWaitAnimation: Char=Caster\n\t\tStartThread\n\t\t\tWait: Time=10\n\t\t\tPlayAnimation: Char=Caster ; Anim=MP_IDLE_CMD\n\t\tEndThread\n\tEndThread\n\tStartThread: Condition=CasterCharacterIndex != CharacterId_Vivi ; Sync\n\t\tPlayAnimation: Char=Caster ; Anim=MP_IDLE_TO_CHANT\n\t\tWaitAnimation: Char=Caster\n\t\tPlayAnimation: Char=Caster ; Anim=MP_CHANT ; Loop=True\n\t\tChannel\n\t\tWaitSFXLoaded: SFX=Doomsday ; Reflect=True\n\t\tWaitAnimation: Char=Caster\n\t\tStopChannel\n\t\tPlayAnimation: Char=Caster ; Anim=MP_MAGIC\n\t\tWaitAnimation: Char=Caster\n\tEndThread\nEndThread\nStartThread: Condition=ItemUseId != 255 ; Sync=True\n\tPlayAnimation: Char=Caster ; Anim=MP_ITEM1\n\tWaitAnimation: Char=Caster\n\tWaitSFXLoaded: SFX=Doomsday ; Reflect=True\nEndThread\nPlaySFX: SFX=Doomsday ; Reflect=True\nWaitSFXDone: SFX=Doomsday ; Reflect=True\nSetVariable: Variable=cmd_status ; Value=|2 ; Reflect=True\nActivateReflect\nWaitReflect\nStartThread: Condition=CasterRow == 0 ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, -400) ; Anim=MP_STEP_BACK\n\tWaitMove: Char=Caster\nEndThread\nPlayAnimation: Char=Caster ; Anim=Idle\nTurn: Char=Caster ; BaseAngle=Default ; Time=5\nWaitTurn: Char=Caster"
      }
    ],
    "Ark__Full": [
      {
        "template_id": "ark_full_playersequence",
        "target_type": "Ark__Full",
        "label": "PlayerSequence",
        "description": "Imported from Alternate Fantasy (ef381/PlayerSequence.seq)",
        "body": "// Player sequence of SFX Ark__Full\n\nWaitAnimation: Char=Caster\nSetVariable: Variable=cmd_status ; Value=&65533 ; Reflect=True\nStartThread: Condition=CasterRow == 0 && AreCasterAndSelectedTargetsEnemies ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, 400) ; Anim={anim_1}\n\tWaitMove: Char=Caster\nEndThread\nStartThread: Condition=IsSingleSelectedTarget\n\tTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nEndThread\nMessage: Text={text_1}; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX={sfx_1}; Reflect=True ; UseCamera=True\nStartThread: Condition=CasterCharacterIndex == CharacterId_Garnet ; Sync\n\tShowMesh: Enable=False ; Mesh=Weapon ; Time=0 ; Char=Caster\n\tPlayAnimation: Char=Caster ; Anim={anim_2}\n\tWait: Time=10\n\tChannel\n\tWaitAnimation: Char=Caster\n\tPlayAnimation: Char=Caster ; Anim={anim_3}; Loop=True\n\tWaitSFXLoaded: SFX={sfx_2}; Reflect=True\n\tWaitAnimation: Char=Caster\n\tStopChannel\n\tSetBackgroundIntensity: Intensity=0.5 ; Time=18\n\tPlayAnimation: Char=Caster ; Anim={anim_4}\nEndThread\nStartThread: Condition=CasterCharacterIndex != CharacterId_Garnet ; Sync\n\tPlayAnimation: Char=Caster ; Anim={anim_5}\n\tWaitAnimation: Char=Caster\n\tPlayAnimation: Char=Caster ; Anim={anim_6}; Loop=True\n\tChannel\n\tSetBackgroundIntensity: Intensity=0.5 ; Time=12\n\tWait: Time=9\n\tShowMesh: Enable=False ; Time=16 ; Char=AllPlayers\n\tWaitSFXLoaded: SFX={sfx_3}; Reflect=True\n\tWaitAnimation: Char=Caster\n\tStopChannel\n\tPlayAnimation: Char=Caster ; Anim={anim_7}\nEndThread\nWaitAnimation: Char=Caster\nPlaySFX: SFX={sfx_4}; Reflect=True\nWaitSFXDone: SFX={sfx_5}; Reflect=True\nSetVariable: Variable=cmd_status ; Value=|2 ; Reflect=True\nActivateReflect\nWaitReflect\nStartThread: Condition=CasterRow == 0 && AreCasterAndSelectedTargetsEnemies ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, -400) ; Anim={anim_8}\n\tWaitMove: Char=Caster\nEndThread\nPlayAnimation: Char=Caster ; Anim={anim_9}\nTurn: Char=Caster ; BaseAngle=Default ; Time=5\nWaitTurn: Char=Caster\n",
        "placeholders": {
          "sfx_1": "SFX identifier (was Ark__Full)",
          "sfx_2": "SFX identifier (was Ark__Full)",
          "sfx_3": "SFX identifier (was Ark__Full)",
          "sfx_4": "SFX identifier (was Ark__Full)",
          "sfx_5": "SFX identifier (was Ark__Full)",
          "anim_1": "Animation identifier (was MP_STEP_FORWARD)",
          "anim_2": "Animation identifier (was ANH_MAIN_B0_003_600)",
          "anim_3": "Animation identifier (was ANH_MAIN_B0_003_601)",
          "anim_4": "Animation identifier (was ANH_MAIN_B0_003_602)",
          "anim_5": "Animation identifier (was MP_IDLE_TO_CHANT)",
          "anim_6": "Animation identifier (was MP_CHANT)",
          "anim_7": "Animation identifier (was MP_MAGIC)",
          "anim_8": "Animation identifier (was MP_STEP_BACK)",
          "anim_9": "Animation identifier (was Idle)",
          "text_1": "Message text (was [CastName])"
        },
        "example": "// Player sequence of SFX Ark__Full\n\nWaitAnimation: Char=Caster\nSetVariable: Variable=cmd_status ; Value=&65533 ; Reflect=True\nStartThread: Condition=CasterRow == 0 && AreCasterAndSelectedTargetsEnemies ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, 400) ; Anim=MP_STEP_FORWARD\n\tWaitMove: Char=Caster\nEndThread\nStartThread: Condition=IsSingleSelectedTarget\n\tTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\nEndThread\nMessage: Text=[CastName] ; Priority=1 ; Title=True ; Reflect=True\nSetupReflect: Delay=SFXLoaded\nLoadSFX: SFX=Ark__Full ; Reflect=True ; UseCamera=True\nStartThread: Condition=CasterCharacterIndex == CharacterId_Garnet ; Sync\n\tShowMesh: Enable=False ; Mesh=Weapon ; Time=0 ; Char=Caster\n\tPlayAnimation: Char=Caster ; Anim=ANH_MAIN_B0_003_600\n\tWait: Time=10\n\tChannel\n\tWaitAnimation: Char=Caster\n\tPlayAnimation: Char=Caster ; Anim=ANH_MAIN_B0_003_601 ; Loop=True\n\tWaitSFXLoaded: SFX=Ark__Full ; Reflect=True\n\tWaitAnimation: Char=Caster\n\tStopChannel\n\tSetBackgroundIntensity: Intensity=0.5 ; Time=18\n\tPlayAnimation: Char=Caster ; Anim=ANH_MAIN_B0_003_602\nEndThread\nStartThread: Condition=CasterCharacterIndex != CharacterId_Garnet ; Sync\n\tPlayAnimation: Char=Caster ; Anim=MP_IDLE_TO_CHANT\n\tWaitAnimation: Char=Caster\n\tPlayAnimation: Char=Caster ; Anim=MP_CHANT ; Loop=True\n\tChannel\n\tSetBackgroundIntensity: Intensity=0.5 ; Time=12\n\tWait: Time=9\n\tShowMesh: Enable=False ; Time=16 ; Char=AllPlayers\n\tWaitSFXLoaded: SFX=Ark__Full ; Reflect=True\n\tWaitAnimation: Char=Caster\n\tStopChannel\n\tPlayAnimation: Char=Caster ; Anim=MP_MAGIC\nEndThread\nWaitAnimation: Char=Caster\nPlaySFX: SFX=Ark__Full ; Reflect=True\nWaitSFXDone: SFX=Ark__Full ; Reflect=True\nSetVariable: Variable=cmd_status ; Value=|2 ; Reflect=True\nActivateReflect\nWaitReflect\nStartThread: Condition=CasterRow == 0 && AreCasterAndSelectedTargetsEnemies ; Sync=True\n\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, -400) ; Anim=MP_STEP_BACK\n\tWaitMove: Char=Caster\nEndThread\nPlayAnimation: Char=Caster ; Anim=Idle\nTurn: Char=Caster ; BaseAngle=Default ; Time=5\nWaitTurn: Char=Caster"
      },
      {
        "template_id": "ark_full_sequence",
        "target_type": "Ark__Full",
        "label": "Sequence",
        "description": "Imported from Alternate Fantasy (ef381/Sequence.seq)",
        "body": "// Shared sequence of SFX Ark__Full\n// Double hit\n\nShowMesh: Char=AllPlayers ; Enable=False ; IsDisappear=True\nPlaySound: Sound=2387 ; Pitch=0.76\nPlaySound: Sound=2388 ; Pitch=0.76\nPlaySound: Sound=2389 ; Pitch=0.76\nPlaySound: Sound=2390 ; Pitch=0.76\nWait: Time=17\nShowMesh: Char=AllEnemies; Enable=False ; Time=16\nSetBackgroundIntensity: Intensity=0 ; Time=14 ; HoldDuration=862\nWait: Time=15\nShowMesh: Char=AllEnemies ; Enable=False ; IsDisappear=True\nWait: Time=227\nPlaySound: Sound=2391 ; Pitch=0.76\nPlaySound: Sound=2392 ; Pitch=0.76\nPlaySound: Sound=2393 ; Pitch=0.76\nPlaySound: Sound=2394 ; Pitch=0.76\nWait: Time=110\nPlaySound: Sound=184 ; SoundType=Song ; Volume=1.3\nWait: Time=7\nPlaySound: Sound=2395 ; Pitch=0.76\nPlaySound: Sound=2396 ; Pitch=0.76\nPlaySound: Sound=2397 ; Pitch=0.76\nPlaySound: Sound=2398 ; Pitch=0.76\nWait: Time=173\nPlaySound: Sound=2399\nPlaySound: Sound=2400\nPlaySound: Sound=2401\nPlaySound: Sound=2402\nWait: Time=308\nPlaySound: Sound=2403 ; Pitch=0.76\nPlaySound: Sound=2404 ; Pitch=0.76\nPlaySound: Sound=2405 ; Pitch=0.76\nPlaySound: Sound=2406 ; Pitch=0.76\nWait: Time=22\nShowMesh: Char=AllTargets ; Enable=True ; IsDisappear=True\nSetBackgroundIntensity: Intensity=1 ; Time=0\nWait: Time=36\nSetBackgroundIntensity: Intensity=0.46875 ; Time=28 ; HoldDuration=41\nWait: Time=41\nSetBackgroundIntensity: Intensity=0 ; Time=0 ; HoldDuration=83\nShowMesh: Char=AllTargets ; Enable=False ; IsDisappear=True\nPlaySound: Sound=2407\nPlaySound: Sound=2408\nPlaySound: Sound=2409\nPlaySound: Sound=2410\nWait: Time=83\nShowMesh: Char=AllTargets ; Enable=True ; IsDisappear=True\nSetBackgroundIntensity: Intensity=0.7265625 ; Time=0 ; HoldDuration=34\nWait: Time=33\nPlaySound: Sound=2411 ; Pitch=0.76\nPlaySound: Sound=2412 ; Pitch=0.76\nPlaySound: Sound=2413 ; Pitch=0.76\nPlaySound: Sound=2414 ; Pitch=0.76\nWait: Time=1\nSetBackgroundIntensity: Intensity=0.4296875 ; Time=16 ; HoldDuration=72\nWait: Time=72\nSetBackgroundIntensity: Intensity=0 ; Time=0 ; HoldDuration=478\nEffectPoint: Char=AllTargets ; Type=Effect\nWait: Time=24\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=26\nPlaySound: Sound=183 ; SoundType=Song ; Volume=1.3\nWait: Time=17\nShowMesh: Char=AllTargets ; Enable=False ; IsDisappear=True\nWait: Time=3\nPlaySound: Sound=2415 ; Pitch=0.76\nPlaySound: Sound=2416 ; Pitch=0.76\nPlaySound: Sound=2417 ; Pitch=0.76\nPlaySound: Sound=2418 ; Pitch=0.76\nWait: Time=97\nShowMesh: Char=AllTargets ; Enable=True ; IsDisappear=True\nWait: Time=1\nPlaySound: Sound=2419 ; Pitch=0.76\nPlaySound: Sound=2420 ; Pitch=0.76\nPlaySound: Sound=2421 ; Pitch=0.76\nPlaySound: Sound=2422 ; Pitch=0.76\nWait: Time=19\nShowMesh: Char=AllTargets ; Enable=False ; IsDisappear=True\nWait: Time=16\nPlaySound: Sound=2502\nPlaySound: Sound=2503\nPlaySound: Sound=2504\nPlaySound: Sound=2505\nWait: Time=136\nPlaySound: Sound=2423 ; Pitch=0.76\nPlaySound: Sound=2424 ; Pitch=0.76\nPlaySound: Sound=2425 ; Pitch=0.76\nPlaySound: Sound=2426 ; Pitch=0.76\nWait: Time=139\nSetBackgroundIntensity: Intensity=1 ; Time=20\nWait: Time=1\nShowMesh: Char=AllEnemies ; Enable=True ; IsDisappear=True\nShowMesh: Char=AllEnemies ; Enable=True ; Time=20\nWait: Time=11\nEffectPoint: Char=AllTargets ; Type=Effect\nWait: Time=12\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=20\nShowMesh: Char=AllPlayers ; Enable=True ; IsDisappear=True\nShowMesh: Char=AllPlayers ; Enable=True ; Time=12\nWait: Time=31\n",
        "placeholders": {},
        "example": "// Shared sequence of SFX Ark__Full\n// Double hit\n\nShowMesh: Char=AllPlayers ; Enable=False ; IsDisappear=True\nPlaySound: Sound=2387 ; Pitch=0.76\nPlaySound: Sound=2388 ; Pitch=0.76\nPlaySound: Sound=2389 ; Pitch=0.76\nPlaySound: Sound=2390 ; Pitch=0.76\nWait: Time=17\nShowMesh: Char=AllEnemies; Enable=False ; Time=16\nSetBackgroundIntensity: Intensity=0 ; Time=14 ; HoldDuration=862\nWait: Time=15\nShowMesh: Char=AllEnemies ; Enable=False ; IsDisappear=True\nWait: Time=227\nPlaySound: Sound=2391 ; Pitch=0.76\nPlaySound: Sound=2392 ; Pitch=0.76\nPlaySound: Sound=2393 ; Pitch=0.76\nPlaySound: Sound=2394 ; Pitch=0.76\nWait: Time=110\nPlaySound: Sound=184 ; SoundType=Song ; Volume=1.3\nWait: Time=7\nPlaySound: Sound=2395 ; Pitch=0.76\nPlaySound: Sound=2396 ; Pitch=0.76\nPlaySound: Sound=2397 ; Pitch=0.76\nPlaySound: Sound=2398 ; Pitch=0.76\nWait: Time=173\nPlaySound: Sound=2399\nPlaySound: Sound=2400\nPlaySound: Sound=2401\nPlaySound: Sound=2402\nWait: Time=308\nPlaySound: Sound=2403 ; Pitch=0.76\nPlaySound: Sound=2404 ; Pitch=0.76\nPlaySound: Sound=2405 ; Pitch=0.76\nPlaySound: Sound=2406 ; Pitch=0.76\nWait: Time=22\nShowMesh: Char=AllTargets ; Enable=True ; IsDisappear=True\nSetBackgroundIntensity: Intensity=1 ; Time=0\nWait: Time=36\nSetBackgroundIntensity: Intensity=0.46875 ; Time=28 ; HoldDuration=41\nWait: Time=41\nSetBackgroundIntensity: Intensity=0 ; Time=0 ; HoldDuration=83\nShowMesh: Char=AllTargets ; Enable=False ; IsDisappear=True\nPlaySound: Sound=2407\nPlaySound: Sound=2408\nPlaySound: Sound=2409\nPlaySound: Sound=2410\nWait: Time=83\nShowMesh: Char=AllTargets ; Enable=True ; IsDisappear=True\nSetBackgroundIntensity: Intensity=0.7265625 ; Time=0 ; HoldDuration=34\nWait: Time=33\nPlaySound: Sound=2411 ; Pitch=0.76\nPlaySound: Sound=2412 ; Pitch=0.76\nPlaySound: Sound=2413 ; Pitch=0.76\nPlaySound: Sound=2414 ; Pitch=0.76\nWait: Time=1\nSetBackgroundIntensity: Intensity=0.4296875 ; Time=16 ; HoldDuration=72\nWait: Time=72\nSetBackgroundIntensity: Intensity=0 ; Time=0 ; HoldDuration=478\nEffectPoint: Char=AllTargets ; Type=Effect\nWait: Time=24\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=26\nPlaySound: Sound=183 ; SoundType=Song ; Volume=1.3\nWait: Time=17\nShowMesh: Char=AllTargets ; Enable=False ; IsDisappear=True\nWait: Time=3\nPlaySound: Sound=2415 ; Pitch=0.76\nPlaySound: Sound=2416 ; Pitch=0.76\nPlaySound: Sound=2417 ; Pitch=0.76\nPlaySound: Sound=2418 ; Pitch=0.76\nWait: Time=97\nShowMesh: Char=AllTargets ; Enable=True ; IsDisappear=True\nWait: Time=1\nPlaySound: Sound=2419 ; Pitch=0.76\nPlaySound: Sound=2420 ; Pitch=0.76\nPlaySound: Sound=2421 ; Pitch=0.76\nPlaySound: Sound=2422 ; Pitch=0.76\nWait: Time=19\nShowMesh: Char=AllTargets ; Enable=False ; IsDisappear=True\nWait: Time=16\nPlaySound: Sound=2502\nPlaySound: Sound=2503\nPlaySound: Sound=2504\nPlaySound: Sound=2505\nWait: Time=136\nPlaySound: Sound=2423 ; Pitch=0.76\nPlaySound: Sound=2424 ; Pitch=0.76\nPlaySound: Sound=2425 ; Pitch=0.76\nPlaySound: Sound=2426 ; Pitch=0.76\nWait: Time=139\nSetBackgroundIntensity: Intensity=1 ; Time=20\nWait: Time=1\nShowMesh: Char=AllEnemies ; Enable=True ; IsDisappear=True\nShowMesh: Char=AllEnemies ; Enable=True ; Time=20\nWait: Time=11\nEffectPoint: Char=AllTargets ; Type=Effect\nWait: Time=12\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=20\nShowMesh: Char=AllPlayers ; Enable=True ; IsDisappear=True\nShowMesh: Char=AllPlayers ; Enable=True ; Time=12\nWait: Time=31"
      }
    ],
    "Ark__Short": [
      {
        "template_id": "ark_short_playersequence",
        "target_type": "Ark__Short",
        "label": "PlayerSequence",
        "description": "Imported from Alternate Fantasy (ef447/PlayerSequence.seq)",
        "body": "// Player sequence of SFX Ark__Short\n\nStartThread: Condition=CommandId != 57\n\tWaitAnimation: Char=Caster\n\tSetVariable: Variable=cmd_status ; Value=&65533 ; Reflect=True\n\tStartThread: Condition=CasterRow == 0 && AreCasterAndSelectedTargetsEnemies ; Sync=True\n\t\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, 400) ; Anim={anim_1}\n\t\tWaitMove: Char=Caster\n\tEndThread\n\tStartThread: Condition=IsSingleSelectedTarget\n\t\tTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\n\tEndThread\n\tMessage: Text={text_1}; Priority=1 ; Title=True ; Reflect=True\n\tSetupReflect: Delay=SFXLoaded\n\tLoadSFX: SFX={sfx_1}; Reflect=True ; UseCamera=True\n\tStartThread: Condition=CasterCharacterIndex == CharacterId_Garnet ; Sync\n\t\tShowMesh: Enable=False ; Mesh=Weapon ; Time=0 ; Char=Caster\n\t\tPlayAnimation: Char=Caster ; Anim={anim_2}\n\t\tWait: Time=10\n\t\tChannel\n\t\tWaitAnimation: Char=Caster\n\t\tPlayAnimation: Char=Caster ; Anim={anim_3}; Loop=True\n\t\tWaitSFXLoaded: SFX={sfx_2}; Reflect=True\n\t\tWaitAnimation: Char=Caster\n\t\tStopChannel\n\t\tSetBackgroundIntensity: Intensity=0.5 ; Time=18\n\t\tPlayAnimation: Char=Caster ; Anim={anim_4}\n\tEndThread\n\tStartThread: Condition=CasterCharacterIndex != CharacterId_Garnet ; Sync\n\t\tPlayAnimation: Char=Caster ; Anim={anim_5}\n\t\tWaitAnimation: Char=Caster\n\t\tPlayAnimation: Char=Caster ; Anim={anim_6}; Loop=True\n\t\tChannel\n\t\tShowMesh: Enable=False ; Time=16 ; Char=AllPlayers\n\t\tWaitSFXLoaded: SFX={sfx_3}; Reflect=True\n\t\tWaitAnimation: Char=Caster\n\t\tStopChannel\n\t\tPlayAnimation: Char=Caster ; Anim={anim_7}\n\tEndThread\n\tWaitAnimation: Char=Caster\n\tPlaySFX: SFX={sfx_4}; Reflect=True\n\tWaitSFXDone: SFX={sfx_5}; Reflect=True\n\tActivateReflect\n\tWaitReflect\n\tStartThread: Condition=CasterRow == 0 && AreCasterAndSelectedTargetsEnemies ; Sync=True\n\t\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, -400) ; Anim={anim_8}\n\t\tWaitMove: Char=Caster\n\tEndThread\n\tPlayAnimation: Char=Caster ; Anim={anim_9}\n\tTurn: Char=Caster ; BaseAngle=Default ; Time=5\n\tWaitTurn: Char=Caster\n\tSetVariable: Variable=cmd_status ; Value=|2 ; Reflect=True\nEndThread\nStartThread: Condition=CommandId == 57\n\tSetVariable: Variable=cmd_status ; Value=&65533 ; Reflect=True\n\tMessage: Text={text_2}; Priority=1 ; Title=True ; Reflect=True\n\tSetupReflect: Delay=SFXLoaded\n\tLoadSFX: SFX={sfx_6}; Reflect=True ; UseCamera=True\n\tWaitSFXLoaded: SFX={sfx_7}; Reflect=True\n\tPlaySFX: SFX={sfx_8}; Reflect=True\n\tWaitSFXDone: SFX={sfx_9}; Reflect=True\n\tActivateReflect\n\tWaitReflect\n\tSetVariable: Variable=cmd_status ; Value=|2 ; Reflect=True\nEndThread\n",
        "placeholders": {
          "sfx_1": "SFX identifier (was Ark__Short)",
          "sfx_2": "SFX identifier (was Ark__Short)",
          "sfx_3": "SFX identifier (was Ark__Short)",
          "sfx_4": "SFX identifier (was Ark__Short)",
          "sfx_5": "SFX identifier (was Ark__Short)",
          "sfx_6": "SFX identifier (was Ark__Short)",
          "sfx_7": "SFX identifier (was Ark__Short)",
          "sfx_8": "SFX identifier (was Ark__Short)",
          "sfx_9": "SFX identifier (was Ark__Short)",
          "anim_1": "Animation identifier (was MP_STEP_FORWARD)",
          "anim_2": "Animation identifier (was ANH_MAIN_B0_003_600)",
          "anim_3": "Animation identifier (was ANH_MAIN_B0_003_601)",
          "anim_4": "Animation identifier (was ANH_MAIN_B0_003_602)",
          "anim_5": "Animation identifier (was MP_IDLE_TO_CHANT)",
          "anim_6": "Animation identifier (was MP_CHANT)",
          "anim_7": "Animation identifier (was MP_MAGIC)",
          "anim_8": "Animation identifier (was MP_STEP_BACK)",
          "anim_9": "Animation identifier (was Idle)",
          "text_1": "Message text (was [CastName])",
          "text_2": "Message text (was [CastName])"
        },
        "example": "// Player sequence of SFX Ark__Short\n\nStartThread: Condition=CommandId != 57\n\tWaitAnimation: Char=Caster\n\tSetVariable: Variable=cmd_status ; Value=&65533 ; Reflect=True\n\tStartThread: Condition=CasterRow == 0 && AreCasterAndSelectedTargetsEnemies ; Sync=True\n\t\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, 400) ; Anim=MP_STEP_FORWARD\n\t\tWaitMove: Char=Caster\n\tEndThread\n\tStartThread: Condition=IsSingleSelectedTarget\n\t\tTurn: Char=Caster ; BaseAngle=AllTargets ; Time=5\n\tEndThread\n\tMessage: Text=[CastName] ; Priority=1 ; Title=True ; Reflect=True\n\tSetupReflect: Delay=SFXLoaded\n\tLoadSFX: SFX=Ark__Short ; Reflect=True ; UseCamera=True\n\tStartThread: Condition=CasterCharacterIndex == CharacterId_Garnet ; Sync\n\t\tShowMesh: Enable=False ; Mesh=Weapon ; Time=0 ; Char=Caster\n\t\tPlayAnimation: Char=Caster ; Anim=ANH_MAIN_B0_003_600\n\t\tWait: Time=10\n\t\tChannel\n\t\tWaitAnimation: Char=Caster\n\t\tPlayAnimation: Char=Caster ; Anim=ANH_MAIN_B0_003_601 ; Loop=True\n\t\tWaitSFXLoaded: SFX=Ark__Short ; Reflect=True\n\t\tWaitAnimation: Char=Caster\n\t\tStopChannel\n\t\tSetBackgroundIntensity: Intensity=0.5 ; Time=18\n\t\tPlayAnimation: Char=Caster ; Anim=ANH_MAIN_B0_003_602\n\tEndThread\n\tStartThread: Condition=CasterCharacterIndex != CharacterId_Garnet ; Sync\n\t\tPlayAnimation: Char=Caster ; Anim=MP_IDLE_TO_CHANT\n\t\tWaitAnimation: Char=Caster\n\t\tPlayAnimation: Char=Caster ; Anim=MP_CHANT ; Loop=True\n\t\tChannel\n\t\tShowMesh: Enable=False ; Time=16 ; Char=AllPlayers\n\t\tWaitSFXLoaded: SFX=Ark__Short ; Reflect=True\n\t\tWaitAnimation: Char=Caster\n\t\tStopChannel\n\t\tPlayAnimation: Char=Caster ; Anim=MP_MAGIC\n\tEndThread\n\tWaitAnimation: Char=Caster\n\tPlaySFX: SFX=Ark__Short ; Reflect=True\n\tWaitSFXDone: SFX=Ark__Short ; Reflect=True\n\tActivateReflect\n\tWaitReflect\n\tStartThread: Condition=CasterRow == 0 && AreCasterAndSelectedTargetsEnemies ; Sync=True\n\t\tMoveToPosition: Char=Caster ; RelativePosition=(0, 0, -400) ; Anim=MP_STEP_BACK\n\t\tWaitMove: Char=Caster\n\tEndThread\n\tPlayAnimation: Char=Caster ; Anim=Idle\n\tTurn: Char=Caster ; BaseAngle=Default ; Time=5\n\tWaitTurn: Char=Caster\n\tSetVariable: Variable=cmd_status ; Value=|2 ; Reflect=True\nEndThread\nStartThread: Condition=CommandId == 57\n\tSetVariable: Variable=cmd_status ; Value=&65533 ; Reflect=True\n\tMessage: Text=[CastName] ; Priority=1 ; Title=True ; Reflect=True\n\tSetupReflect: Delay=SFXLoaded\n\tLoadSFX: SFX=Ark__Short ; Reflect=True ; UseCamera=True\n\tWaitSFXLoaded: SFX=Ark__Short ; Reflect=True\n\tPlaySFX: SFX=Ark__Short ; Reflect=True\n\tWaitSFXDone: SFX=Ark__Short ; Reflect=True\n\tActivateReflect\n\tWaitReflect\n\tSetVariable: Variable=cmd_status ; Value=|2 ; Reflect=True\nEndThread"
      }
    ],
    "Neutron_Ring": [
      {
        "template_id": "neutron_ring_sequence",
        "target_type": "Neutron_Ring",
        "label": "Sequence",
        "description": "Imported from Alternate Fantasy (ef499/Sequence.seq)",
        "body": "// Shared sequence of SFX Neutron_Ring\n// Double hit\n\nPlaySound: Sound=2690\nPlaySound: Sound=2691\nPlaySound: Sound=2692\nPlaySound: Sound=2693\nWait: Time=1\n//ShowMesh: Char=AllPlayers ; Enable=False ; IsDisappear=True\nStartThread: Condition=SFXUseCamera ; Sync=True\n\tMoveToPosition: Char=Caster ; AbsolutePosition=Default ; RelativePosition=(0.0, 2.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 6.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 10.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 14.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 18.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 22.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 26.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 30.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 34.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 38.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 42.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 46.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 50.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 54.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 58.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 62.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 66.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 70.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 74.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 78.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 82.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 86.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 90.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 94.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 98.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 102.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 106.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 110.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 114.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 118.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 122.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 126.0, 0.0) ; MoveHeight=True ; Time=0\nEndThread\nStartThread: Condition=!SFXUseCamera ; Sync=True\n\tWait: Time=31\nEndThread\nWait: Time=19\nSetBackgroundIntensity: Intensity=0 ; Time=32 ; HoldDuration=140\nWait: Time=31\nPlaySound: Sound=2694\nPlaySound: Sound=2695\nPlaySound: Sound=2696\n//ShowMesh: Char=AllPlayers ; Enable=True ; IsDisappear=True\n//ShowMesh: Char=AllEnemies ; Enable=False ; IsDisappear=True\nWait: Time=62\nEffectPoint: Char=AllTargets ; Type=Effect\nWait: Time=24\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=22\n//ShowMesh: Char=AllEnemies ; Enable=True ; IsDisappear=True\nWait: Time=1\nSetBackgroundIntensity: Intensity=1 ; Time=16\nStartThread: Condition=SFXUseCamera ; Sync=True\n\tMoveToPosition: Char=Caster ; AbsolutePosition=Default ; RelativePosition=(0.0, 1922.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -122.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -118.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -114.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -110.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -106.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -102.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -98.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -94.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -90.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -86.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -82.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -78.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -74.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -70.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -66.0, 0.0) ; MoveHeight=True ; Time=0\n\tEffectPoint: Char=AllTargets ; Type=Effect\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -62.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -58.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -54.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -50.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -46.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -42.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -38.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -34.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -30.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -26.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -22.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -18.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -14.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -10.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -6.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; AbsolutePosition=Default ; MoveHeight=True ; Time=0\nEndThread\nStartThread: Condition=!SFXUseCamera ; Sync=True\n\tWait: Time=15\n\tEffectPoint: Char=AllTargets ; Type=Effect\n\tWait: Time=16\nEndThread\nWait: Time=8\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=24\n",
        "placeholders": {},
        "example": "// Shared sequence of SFX Neutron_Ring\n// Double hit\n\nPlaySound: Sound=2690\nPlaySound: Sound=2691\nPlaySound: Sound=2692\nPlaySound: Sound=2693\nWait: Time=1\n//ShowMesh: Char=AllPlayers ; Enable=False ; IsDisappear=True\nStartThread: Condition=SFXUseCamera ; Sync=True\n\tMoveToPosition: Char=Caster ; AbsolutePosition=Default ; RelativePosition=(0.0, 2.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 6.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 10.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 14.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 18.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 22.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 26.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 30.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 34.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 38.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 42.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 46.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 50.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 54.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 58.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 62.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 66.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 70.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 74.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 78.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 82.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 86.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 90.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 94.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 98.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 102.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 106.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 110.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 114.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 118.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 122.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, 126.0, 0.0) ; MoveHeight=True ; Time=0\nEndThread\nStartThread: Condition=!SFXUseCamera ; Sync=True\n\tWait: Time=31\nEndThread\nWait: Time=19\nSetBackgroundIntensity: Intensity=0 ; Time=32 ; HoldDuration=140\nWait: Time=31\nPlaySound: Sound=2694\nPlaySound: Sound=2695\nPlaySound: Sound=2696\n//ShowMesh: Char=AllPlayers ; Enable=True ; IsDisappear=True\n//ShowMesh: Char=AllEnemies ; Enable=False ; IsDisappear=True\nWait: Time=62\nEffectPoint: Char=AllTargets ; Type=Effect\nWait: Time=24\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=22\n//ShowMesh: Char=AllEnemies ; Enable=True ; IsDisappear=True\nWait: Time=1\nSetBackgroundIntensity: Intensity=1 ; Time=16\nStartThread: Condition=SFXUseCamera ; Sync=True\n\tMoveToPosition: Char=Caster ; AbsolutePosition=Default ; RelativePosition=(0.0, 1922.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -122.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -118.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -114.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -110.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -106.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -102.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -98.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -94.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -90.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -86.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -82.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -78.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -74.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -70.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -66.0, 0.0) ; MoveHeight=True ; Time=0\n\tEffectPoint: Char=AllTargets ; Type=Effect\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -62.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -58.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -54.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -50.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -46.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -42.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -38.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -34.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -30.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -26.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -22.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -18.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -14.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -10.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; RelativePosition=(0.0, -6.0, 0.0) ; MoveHeight=True ; Time=0\n\tWait: Time=1\n\tMoveToPosition: Char=Caster ; AbsolutePosition=Default ; MoveHeight=True ; Time=0\nEndThread\nStartThread: Condition=!SFXUseCamera ; Sync=True\n\tWait: Time=15\n\tEffectPoint: Char=AllTargets ; Type=Effect\n\tWait: Time=16\nEndThread\nWait: Time=8\nEffectPoint: Char=Everyone ; Type=Figure\nWait: Time=24"
      }
    ]
  }
}